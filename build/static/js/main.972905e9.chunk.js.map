{"version":3,"sources":["components/InputRow.tsx","components/Table.tsx","utils/API.tsx","utils/db.tsx","components/AddExpensesForm.tsx","components/AddIncomeForm.tsx","components/PivotTable.tsx","components/Form.tsx","components/MyAppBar.tsx","pages/Home.tsx","pages/Login.tsx","components/Alert.tsx","components/SnackBar.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["StyledTableCell","withStyles","theme","createStyles","body","fontSize","padding","maxWidth","TableCell","StyledTableRow","root","backgroundColor","palette","background","default","blueGrey","paddingLeft","TableRow","InputRow","props","useState","Amount","state","setState","makeDataList","propsState","id","map","entry","value","name","handleInputRowChange","event","target","useEffect","fields","filter","column","includes","TextField","onBlur","e","handleChange","i","onChange","className","inputProps","list","InputProps","startAdornment","InputAdornment","position","disableUnderline","style","width","dataLists","source","person_earner","narrow_category","broad_category","vendor","IconButton","color","onClick","handleUpdate","aria-label","deleteEntry","entry_id","ReportTable","head","primary","main","common","white","classes","makeStyles","table","minWidth","useStyles","myRef","createRef","current","scrollIntoView","behavior","TableContainer","component","Paper","Table","ref","TableHead","schema","replace","TableBody","data","checkStatus","res","parseMethod","status","Error","json","text","blob","db","API","expenses","token","yearMonthObj","fetch","year","month","headers","then","postExpenses","method","JSON","stringify","postBatchExpenses","search","postIncome","postBatchIncome","deleteExpenses","updateExpenses","income","updateIncome","deleteIncome","pivot","dataList","login","checkAuth","downloadFile","filename","start","end","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","openDB","upgrade","createObjectStore","autoIncrement","navigator","onLine","checkDatabase","saveRecord","record","put","clear","localStorage","getItem","getAll","pendingExpenses","length","pendingIncome","console","error","addEventListener","AddRecordsForm","React","useContext","AuthContext","Auth","setAuth","setAlertState","initialFormState","Date","now","NaN","person_id","broad_category_id","narrow_category_id","notes","formState","setFormState","currentCategory","setCurrentCategory","categories","narrowCategories","person","handleFormChange","category","preventDefault","severity","message","open","formStateConvertedDate","toLocaleDateString","setOpenBackdrop","type","DialogContent","Typography","variant","onSubmit","utils","DateFnsUtils","disableToolbar","fullWidth","format","margin","label","date","KeyboardButtonProps","InputLabelProps","shrink","step","FormControl","formControl","InputLabel","htmlFor","Select","labelId","MenuItem","Button","handleClose","amount","earner_id","DarkTableRow","cursor","LightTableRow","ExtraLightTableRow","PivotTable","show","setShow","pivotState","reduce","b","Broad_category","total","parseFloat","narrow_categories","Narrow_category","persons","Person","log","showState","Object","keys","bCat","newShow","toggleShowRow","toFixed","nCat","Form","handleFormSubmit","Container","Card","form","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","borderRadius","shape","fade","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","isMenuOpen","Boolean","user","handleMenuClose","logout","emptyDatabase","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","AppBar","Toolbar","noWrap","InputBase","placeholder","input","aria-controls","aria-haspopup","currentTarget","Home","getUTCFullYear","getUTCMonth","Source","source_id","incomeTableState","setIncomeTableState","Vendor","Notes","expensesTableState","setExpensesTableState","searchTableState","setSearchTableState","dataListsState","setDataListsState","openBackdrop","formatDates","toString","day","getUTCDate","dateString","route","response","assignId","dataListItem","handleExpensesChange","index","newExpensesTableStateData","updatedRow","err","newIncomeTableStateData","updateExpensesRow","selectEmpty","marginTop","flexWrap","down","wallchart","logoutBtn","float","downloadBtn","backdrop","zIndex","speedDial","bottom","right","dialog","datePicker","mobileTitle","speedDialOpen","setSpeedDialOpen","actions","icon","action","setAddExpensesOpen","operation","setAddIncomeOpen","addExpensesOpen","addIncomeOpen","datalists","getDataLists","Box","src","alt","Dialog","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","onMouseLeave","SpeedDialAction","tooltipTitle","tooltipOpen","Backdrop","CircularProgress","disableShrink","Login","username","password","loginFormState","setLoginFormState","inputChange","formSubmit","newToken","payload","loggedIn","to","textAlign","Alert","elevation","snackbar","CustomizedSnackbar","reason","Snackbar","autoHideDuration","defaultTheme","createMuiTheme","options","green","secondary","red","overrides","MuiPickersBasePicker","container","MuiCard","MuiDialogContent","MuiPickersCalendarHeader","iconButton","ProtectedRoute","Component","rest","render","createContext","App","useReducer","setItem","undefined","alertState","catch","testDatabase","ThemeProvider","CssBaseline","Provider","path","setLoggedIn","exact","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","process","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.972905e9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { DataListStateType, TableDataEntry, AllDataListsType } from '../interfaces/Interfaces'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { IconButton, TableCell, TableRow, TextField, InputAdornment } from '@material-ui/core'\r\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        body: {\r\n            fontSize: 14,\r\n            padding: 0,\r\n            maxWidth: '10ch',\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.background.default,\r\n            },\r\n            '&:nth-of-type(even)': {\r\n                backgroundColor: blueGrey[800],\r\n            },\r\n            '& input': {\r\n                backgroundColor: 'inherit',\r\n                paddingLeft: 0,\r\n            }\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nexport default function InputRow(props:\r\n    {\r\n        entry: TableDataEntry,\r\n        i: number,\r\n        fields: { name: string }[],\r\n        dataLists?: AllDataListsType\r\n        handleChange: Function,\r\n        handleUpdate: Function,\r\n        deleteEntry: Function\r\n    }) {\r\n\r\n    const [state, setState] = useState<TableDataEntry>({ Amount: \"\" })\r\n\r\n    function makeDataList(propsState: DataListStateType[], id: string) {\r\n        return (\r\n            <datalist id={id}>\r\n                {propsState.map((entry: DataListStateType) => {\r\n                    return (\r\n                        <option\r\n                            value={entry.name}\r\n                            key={entry.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </datalist>\r\n        )\r\n    }\r\n\r\n    function handleInputRowChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        let { name, value } = event.target;\r\n        setState({ ...state, [name]: value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState(props.entry)\r\n    }, [props.entry])\r\n\r\n    return (\r\n        <StyledTableRow>\r\n            {props.fields\r\n                .filter(column => !column.name.includes(\"id\"))\r\n                .map(column => {\r\n                    return (\r\n                        <StyledTableCell\r\n\r\n                        >\r\n                            <TextField\r\n                                name={column.name}\r\n                                onBlur={(e: React.FocusEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n                                    props.handleChange(e, props.i)\r\n                                }}\r\n                                onChange={handleInputRowChange}\r\n                                className=\"tableInput\"\r\n                                value={state[column.name as keyof TableDataEntry] || \"\"}\r\n                                inputProps={{\r\n                                    list: column.name\r\n                                }}\r\n                                InputProps={\r\n                                     {\r\n                                    startAdornment: <InputAdornment position=\"start\">{column.name === 'Amount' ? \"$\" : null}</InputAdornment>,\r\n                                    disableUnderline: true\r\n                                }\r\n                            }\r\n                                style={{ width: '80%' }}\r\n                            // style={{width: `${(state[column.name as keyof TableDataEntry]?.toString().length || 12) + 3.5}ch`}}\r\n                            />\r\n                            {column.name === 'Source' && props.dataLists?.source ? (\r\n                                makeDataList(props.dataLists?.source, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Person' && props.dataLists?.person_earner ? (\r\n                                makeDataList(props.dataLists?.person_earner, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Narrow_category' && props.dataLists?.narrow_category ? (\r\n                                makeDataList(props.dataLists?.narrow_category, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Broad_category' && props.dataLists?.broad_category ? (\r\n                                makeDataList(props.dataLists?.broad_category, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Vendor' && props.dataLists?.vendor ? (\r\n                                makeDataList(props.dataLists?.vendor, column.name)\r\n                            ) : null}\r\n                        </StyledTableCell>\r\n                    )\r\n                })}\r\n            <StyledTableCell>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => props.handleUpdate(props.i)}\r\n                >\r\n                    <SaveIcon />\r\n                </IconButton>\r\n            </StyledTableCell>\r\n            <StyledTableCell>\r\n                <IconButton\r\n                    aria-label=\"delete\"\r\n                    color=\"secondary\"\r\n                    onClick={() => props.deleteEntry(state.entry_id || state.id)}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </StyledTableCell>\r\n        </StyledTableRow>\r\n    )\r\n}","import React, {useEffect, createRef} from 'react'\r\nimport InputRow from './InputRow'\r\nimport type { TableDataEntry, AllDataListsType } from \"../interfaces/Interfaces\"\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { makeStyles, createStyles, withStyles, Theme } from '@material-ui/core/styles';\r\n\r\nexport default function ReportTable(props:\r\n    {\r\n        state:\r\n        {\r\n            schema:\r\n            {\r\n                fields: { name: string }[]\r\n            },\r\n            data: TableDataEntry[]\r\n\r\n        },\r\n        dataLists?: AllDataListsType\r\n        handleChange: Function,\r\n        handleUpdate: Function,\r\n        deleteEntry: Function,\r\n        form?: string\r\n    }) {\r\n\r\n        const StyledTableCell = withStyles((theme: Theme) =>\r\n        createStyles({\r\n            head: {\r\n                backgroundColor: theme.palette.primary.main,\r\n                color: theme.palette.common.white,\r\n                padding: 10,\r\n                fontSize: 16\r\n            },\r\n        }),\r\n        )(TableCell);\r\n\r\n        const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            table: {\r\n                minWidth: 650,\r\n            },\r\n        })\r\n        );\r\n        const classes = useStyles();\r\n\r\n        // Component scrolls into view on mount\r\n        const myRef = createRef<HTMLTableElement>()\r\n        const executeScroll = () => {\r\n            if (myRef.current) {\r\n                myRef.current.scrollIntoView({behavior: 'smooth'})\r\n            }\r\n        }\r\n    \r\n        useEffect(() => {\r\n            executeScroll()\r\n        }, [])\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} ref={myRef}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {props.state.schema.fields\r\n                            .filter(column => !column.name.includes(\"id\"))\r\n                            .map(column => {\r\n                                return (\r\n                                    <StyledTableCell key={column.name}>\r\n                                        {column.name.replace(\"_\", \" \")}\r\n                                    </StyledTableCell>\r\n                                )\r\n                            })}\r\n                        <StyledTableCell><span>Save</span></StyledTableCell>\r\n                        <StyledTableCell><span>Delete</span></StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className=\"tableBody\">\r\n                    {(props.state.data).map((entry: TableDataEntry, i: number) => (\r\n                            <InputRow\r\n                                entry={entry}\r\n                                i={i}\r\n                                key={i}\r\n                                fields={props.state.schema.fields}\r\n                                handleChange={props.handleChange}\r\n                                handleUpdate={props.handleUpdate}\r\n                                dataLists={props.dataLists}\r\n                                deleteEntry={props.deleteEntry}\r\n                            />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import type {\r\n    AllDataListsType,\r\n    FormStateType,\r\n    TableDataEntry,\r\n    TableType,\r\n    ExpensesFormType,\r\n    IncomeFormType\r\n} from '../interfaces/Interfaces'\r\n\r\n\r\nfunction checkStatus<T>(res: Response, parseMethod: string): Promise<T> {\r\n    if (res.status === 401) {\r\n        throw new Error(\"Unauthorized\")\r\n    }\r\n    if (res.status !== 200) {\r\n        throw new Error(\"Error! \" + res.status)\r\n    }\r\n    if (parseMethod === 'json') {\r\n        return res.json() as Promise<T>\r\n    } else if (parseMethod === 'text') {\r\n        return res.text() as unknown as Promise<T>\r\n    } else {\r\n        return res.blob() as unknown as Promise<T>\r\n    }\r\n}\r\n\r\nconst API = {\r\n    expenses: function (token: string | null, yearMonthObj: FormStateType): Promise<{ schema: { fields: [] }, data: TableDataEntry[] }> {\r\n        return fetch(`/api/expenses/${yearMonthObj.year}/${yearMonthObj.month}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<TableType>(res, 'json'))\r\n    },\r\n    postExpenses: function (token: string | null, data: ExpensesFormType): Promise<Response | string> {\r\n        return fetch(`/api/expenses/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    postBatchExpenses: function (token: string | null, data: ExpensesFormType[]): Promise<Response | string> {\r\n        return fetch(`/api/expenses/batch`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    search: function (token: string | null, {search}: FormStateType): Promise<{ schema: { fields: [] }, data: TableDataEntry[] }> {\r\n        return fetch(`/api/expenses/search/${search}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<TableType>(res, 'json'))\r\n    },\r\n    postIncome: function (token: string | null, data: IncomeFormType): Promise<Response | string> {\r\n        return fetch(`/api/income/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    postBatchIncome: function (token: string | null, data: IncomeFormType[]): Promise<Response | string> {\r\n        return fetch(`/api/income/batch`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    deleteExpenses: function (token: string | null, id: number | undefined): Promise<Response | string> {\r\n        return fetch(`/api/expenses/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    updateExpenses: function (token: string | null, data: TableDataEntry): Promise<Response | string> {\r\n        return fetch(`/api/expenses/${data.entry_id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    income: function (token: string | null, yearMonthObj: FormStateType): Promise<{ schema: { fields: [] }, data: TableDataEntry[] }> {\r\n        return fetch(`/api/income/${yearMonthObj.year}/${yearMonthObj.month}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<TableType>(res, 'json'))\r\n    },\r\n    updateIncome: function (token: string | null, data: TableDataEntry): Promise<Response | string> {\r\n        return fetch(`/api/income/${data.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    deleteIncome: function (token: string | null, id: number | undefined): Promise<Response | string> {\r\n        return fetch(`/api/income/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    pivot: function (token: string | null, yearMonthObj: FormStateType): Promise<{ schema: { fields: [] }, data: TableDataEntry[] }> {\r\n        return fetch(`/api/expenses/${yearMonthObj.year}/${yearMonthObj.month}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<TableType>(res, 'json'))\r\n    },\r\n    dataList: function (token: string | null): Promise<AllDataListsType> {\r\n        return fetch(`/api/datalists`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<AllDataListsType>(res, 'json'))\r\n    },\r\n    login: function (data: { username: string, password: string }): Promise<{ token: string }> {\r\n        return fetch('/auth/login', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<{ token: string }>(res, 'json'))\r\n    },\r\n    checkAuth: function (token: string | null): Promise<{ username: string, token: string }> {\r\n        return fetch(`/auth/checkAuth`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<{ username: string, token: string }>(res, 'json'))\r\n    },\r\n    downloadFile: function (token: string | null, filename: string, start: string, end: string): void {\r\n        fetch(`/api/expenses/file/${start}/${end}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<Blob>(res, 'blob'))\r\n            .then(blob => {\r\n                var url = window.URL.createObjectURL(blob);\r\n                var a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = filename;\r\n                document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\r\n                a.click();\r\n                a.remove();  //afterwards we remove the element again         \r\n            });\r\n    }\r\n}\r\n\r\nexport default API\r\n\r\n","import { openDB, DBSchema, IDBPDatabase } from 'idb'\nimport { ExpensesFormType, IncomeFormType } from '../interfaces/Interfaces';\nimport API from './API';\n\ninterface financesDB extends DBSchema {\n  expenses: {\n    value: {\n      Amount: number,\n      Date: Date | null,\n      person_id: number,\n      vendor: string,\n      broad_category_id: number,\n      narrow_category_id: number,\n      notes: string\n    },\n    key: string\n  },\n  income: {\n    value: {\n      date: Date | null,\n      amount: number,\n      earner_id: number,\n      source: string,\n    },\n    key: string\n  }\n}\n\n\nlet db: IDBPDatabase<financesDB>;\nexport async function testDatabase() {\n  db = await openDB<financesDB>(\"pendingFinances\", 2, {\n    upgrade(db) {\n      db.createObjectStore('expenses', { autoIncrement: true })\n      db.createObjectStore('income', { autoIncrement: true })\n    }\n  });\n\n  if (navigator.onLine) {\n    checkDatabase();\n  }\n}\n\nexport async function saveRecord(table: 'income' | 'expenses', record: ExpensesFormType | IncomeFormType) {\n  await db.put(table, record);\n}\n\nexport async function emptyDatabase() {\n  try {\n    await db.clear('expenses')\n    await db.clear('income')\n    return \"pendingFinances cleared!\"\n  } catch (err) {\n    return err\n  }\n}\n\nasync function checkDatabase() {\n  let token = localStorage.getItem('token')\n  try {\n    const pendingExpenses = await db.getAll(\"expenses\");\n    if (pendingExpenses.length > 0) {\n      await API.postBatchExpenses(token, pendingExpenses)\n      // delete records if successful\n      db.clear('expenses')\n    }\n    const pendingIncome = await db.getAll(\"income\");\n    if (pendingIncome.length > 0) {\n      await API.postBatchIncome(token, pendingIncome)\n      // delete records if successful\n      db.clear('income')\n    }\n  } catch (err) {\n    console.error(err)\n  }\n}\n\n// listen for app coming back online\nwindow.addEventListener(\"online\", checkDatabase);","import React, { useState } from 'react'\r\nimport API from '../utils/API'\r\nimport { saveRecord } from '../utils/db'\r\nimport { AuthContext } from '../App'\r\nimport type { ExpensesFormType, CategoryType } from '../interfaces/Interfaces'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    InputAdornment,\r\n    Typography,\r\n    DialogContent\r\n} from '@material-ui/core';\r\n// import 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\n\r\n\r\nexport default function AddRecordsForm(props: {\r\n    classes: { root: string, formControl: string},\r\n    handleClose: Function,\r\n    setOpenBackdrop: Function\r\n}) {\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    const initialFormState = {\r\n        Date: new Date(Date.now()),\r\n        Amount: NaN,\r\n        person_id: NaN,\r\n        broad_category_id: NaN,\r\n        narrow_category_id: NaN,\r\n        vendor: \"\",\r\n        notes: \"\"\r\n    }\r\n\r\n    // Form control state\r\n    const [formState, setFormState] = useState<ExpensesFormType>(initialFormState)\r\n\r\n    // State to hold category info\r\n    const [currentCategory, setCurrentCategory] = useState<CategoryType>({\r\n        name: \"\",\r\n        id: NaN,\r\n    })\r\n\r\n    // Hardcoding categories because the database is a mess...\r\n    const categories = [\r\n        {\r\n            name: \"Groceries\", id: 6, narrowCategories: [\r\n                { name: \"Food\", id: 10 },\r\n                { name: \"Alcohol\", id: 49 },\r\n                { name: \"Entertaining\", id: 7 }\r\n            ]\r\n        },\r\n        {\r\n            name: \"Health and Body\", id: 12, narrowCategories: [\r\n                { name: \"Toiletries\", id: 27 },\r\n                { name: \"Make-up\", id: 51 },\r\n                { name: \"Drugs/Supplements\", id: 273 },\r\n                { name: \"Doctors Visits\", id: 24 },\r\n                { name: \"Gym\", id: 34 },\r\n                { name: \"Essential Oils\", id: 58 },\r\n                { name: \"Massages/Body Care\", id: 41 }\r\n            ], person: true\r\n        },\r\n        {\r\n            name: \"Work\", id: 8, narrowCategories: [\r\n                { name: \"Road Food Out\", id: 20 },\r\n                { name: \"Road Groceries\", id: 37 },\r\n                { name: \"Road Coffee\", id: 21 },\r\n                { name: \"Business Food\", id: 70 },\r\n                { name: \"Scores\", id: 68 },\r\n                { name: \"Office Supplies\", id: 11 },\r\n                { name: \"Plane Tickets\", id: 18 },\r\n                { name: \"Transportation\", id: 9 },\r\n                { name: \"Union Dues\", id: 55 },\r\n                { name: \"Dry Cleaning\", id: 14 },\r\n                { name: \"Concert Tickets\", id: 655 },\r\n                { name: \"Lessons/Coachings\", id: 69 },\r\n                { name: \"Application fees\", id: 61 },\r\n                { name: \"Pianist Fees\", id: 656 }\r\n            ], person: true\r\n        },\r\n        {\r\n            name: \"Eating Out\", id: 3, narrowCategories: [\r\n                { name: \"Date\", id: 28 },\r\n                { name: \"Friends\", id: 3 },\r\n                { name: \"Snacks\", id: 17 },\r\n                { name: \"On the Run\", id: 8 },\r\n                { name: \"Coffee\", id: 30 },\r\n                { name: \"Ordering in\", id: 48 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Home Goods\", id: 9, narrowCategories: [\r\n                { name: \"Kitchen\", id: 12 },\r\n                { name: \"Decorating\", id: 29 },\r\n                { name: \"Furniture\", id: 16 },\r\n                { name: \"Paper Products/Cleaning\", id: 15 },\r\n                { name: \"Office Supplies\", id: 11 },\r\n                { name: \"Hobbies/Creative\", id: 23 },\r\n                { name: \"Linens\", id: 201 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"New York Home\", id: 1, narrowCategories: [\r\n                { name: \"Rent\", id: 40 },\r\n                { name: \"Internet\", id: 1 },\r\n                { name: \"Electricity\", id: 26 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Seattle Home\", id: 7, narrowCategories: [\r\n                { name: \"Mortgage\", id: 39 },\r\n                { name: \"HOA\", id: 38 },\r\n                { name: \"Taxes\", id: 657 },\r\n                { name: \"Internet\", id: 1 },\r\n                { name: \"Electricity\", id: 26 },\r\n                { name: \"Manager/Maintanence\", id: 42 },\r\n                { name: \"Insurance\", id: 134 },\r\n            ]\r\n        },\r\n        { name: \"Clothes\", id: 11, person: true },\r\n        {\r\n            name: \"Laundry\", id: 4, narrowCategories: [\r\n                { name: \"Laundry\", id: 4 },\r\n                { name: \"Dry Cleaning\", id: 14 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Entertainment\", id: 14, narrowCategories: [\r\n                { name: \"Live Shows\", id: 32 },\r\n                { name: \"Movies\", id: 44 },\r\n                { name: \"Museums\", id: 53 },\r\n                { name: \"Books\", id: 36 },\r\n                { name: \"Home (Netflix, Spotify, Amazon, Movie Rentals)\", id: 46 },\r\n                { name: \"Newspaper/Magazine\", id: 47 },\r\n            ]\r\n        },\r\n        { name: \"Philanthropy\", id: 17 },\r\n        {\r\n            name: \"Electronics\", id: 5, narrowCategories: [\r\n                { name: \"Phone Bill\", id: 33 },\r\n                { name: \"Computers\", id: 588 },\r\n                { name: \"Accessories\", id: 31 },\r\n                { name: \"Cloud Storage Fees\", id: 6 },\r\n            ]\r\n        },\r\n        { name: \"Gifts\", id: 13 },\r\n        {\r\n            name: \"Transportation\", id: 2, narrowCategories: [\r\n                { name: \"Gas\", id: 22 },\r\n                { name: \"Repairs\", id: 577 },\r\n                { name: \"Insurance\", id: 134 },\r\n                { name: \"Bike\", id: 567 },\r\n                { name: \"Subway\", id: 35 },\r\n                { name: \"Taxi/Lyft\", id: 5 },\r\n                { name: \"Car Rental\", id: 2 },\r\n                { name: \"Seattle Airplanes\", id: 276 },\r\n                { name: \"Parking\", id: 209 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Maggie\", id: 10, narrowCategories: [\r\n                { name: \"Food\", id: 10 },\r\n                { name: \"Litter\", id: 13 },\r\n                { name: \"Vet Bills\", id: 275 },\r\n                { name: \"Toys\", id: 60 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Travel/Leisure\", id: 16, narrowCategories: [\r\n                { name: \"Planes\", id: 62 },\r\n                { name: \"Ground Transportation\", id: 52 },\r\n                { name: \"Food\", id: 10 },\r\n                { name: \"Experiences\", id: 64 },\r\n                { name: \"Lodging\", id: 43 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Legal\", id: 19, narrowCategories: [\r\n                { name: \"Documents\", id: 202 },\r\n                { name: \"Services\", id: 63 },\r\n            ]\r\n        },\r\n        { name: \"Student Loans\", id: 15 },\r\n        { name: \"Education\", id: 18, person: true },\r\n        {\r\n            name: \"Theo\", id: 7, narrowCategories: [\r\n                { name: \"Baby sitting\", id: 274 },\r\n                { name: \"Toys\", id: 60 },\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const persons = [\r\n        { name: \"Alexa\", id: 3 },\r\n        { name: \"Eli\", id: 1 },\r\n        { name: \"Theo\", id: 2 }\r\n    ]\r\n\r\n    function handleFormChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }>): void {\r\n        let name = event.target.name as keyof typeof formState\r\n        setFormState({ ...formState, [name]: event.target.value })\r\n        if (name === 'broad_category_id') {\r\n            let category = categories.filter(i => i.id === event.target.value)[0]\r\n            setCurrentCategory(category)\r\n        }\r\n    }\r\n\r\n    function handleDateChange(date: Date | null) {\r\n        setFormState({ ...formState, Date: date });\r\n    };\r\n\r\n    async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\r\n        event.preventDefault()\r\n        if (!formState.Date || !formState.Amount || !formState.broad_category_id || !formState.vendor) {\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Please fill out all fields\",\r\n                open: true\r\n            })\r\n            return\r\n        }\r\n        let formStateConvertedDate: any = { ...formState }\r\n        formStateConvertedDate.Date = formStateConvertedDate.Date?.toLocaleDateString(\"en-US\")\r\n        try {\r\n            props.setOpenBackdrop(true)\r\n            await API.postExpenses(Auth.token, formStateConvertedDate)\r\n            props.setOpenBackdrop(false)\r\n            setAlertState({\r\n                severity: \"success\",\r\n                message: \"Record Saved!\",\r\n                open: true\r\n            })\r\n        } catch (err) {\r\n            props.setOpenBackdrop(false)\r\n            if (err.message === \"Error! 500\") {\r\n                setAlertState({\r\n                    severity: \"error\",\r\n                    message: \"Server Error! Contact Eli\",\r\n                    open: true\r\n                })\r\n                return\r\n            } else {\r\n                saveRecord('expenses', formStateConvertedDate)\r\n                if (err.message === \"Unauthorized\") {\r\n                    setAuth({ type: 'LOGOUT' })\r\n                }\r\n                setAlertState({\r\n                    severity: \"warning\",\r\n                    message: \"Record Saved Locally\",\r\n                    open: true\r\n                })\r\n            }\r\n        } finally {\r\n            setFormState(initialFormState)\r\n            setCurrentCategory({\r\n                name: \"\",\r\n                id: NaN\r\n            })\r\n        }\r\n    }\r\n \r\n    return (\r\n            <DialogContent>\r\n            <Typography variant=\"h5\" component=\"h5\" className={props.classes.root}>Log Expense</Typography>\r\n            <form className={props.classes.root} onSubmit={handleFormSubmit}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        fullWidth\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        name=\"Date\"\r\n                        label=\"Date\"\r\n                        value={formState.Date}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}                        \r\n                        />\r\n                </MuiPickersUtilsProvider>\r\n                <TextField\r\n                    onChange={handleFormChange}\r\n                    value={formState.vendor}\r\n                    label=\"Vendor\"\r\n                    name=\"vendor\"\r\n                    type=\"string\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    />\r\n                <TextField\r\n                    onChange={handleFormChange}\r\n                    value={formState.Amount}\r\n                    label=\"Amount\"\r\n                    name=\"Amount\"\r\n                    type=\"number\"\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                    }}\r\n                    inputProps={{ step: \"0.01\" }}\r\n                    />\r\n                <FormControl\r\n                    className={props.classes.formControl}>\r\n                    <InputLabel htmlFor=\"broad_category\">Broad Category</InputLabel>\r\n                    <Select\r\n                        onChange={handleFormChange}\r\n                        value={formState.broad_category_id}\r\n                        name=\"broad_category_id\"\r\n                        labelId=\"broad_category\"\r\n                        label=\"Broad Category\"\r\n                        >\r\n                        {categories.map(i => (\r\n                            <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                            ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {currentCategory.narrowCategories ? (\r\n                    <FormControl className={props.classes.formControl}>\r\n                        <InputLabel htmlFor=\"narrow_category\">Narrow Category</InputLabel>\r\n                        <Select\r\n                            onChange={handleFormChange}\r\n                            value={formState.narrow_category_id}\r\n                            name=\"narrow_category_id\"\r\n                            labelId=\"narrow_category\"\r\n                            label=\"Narrow Category\"\r\n                            >\r\n                            {/* Get the list of narrow categories corresponding to the selected broad category */}\r\n                            {currentCategory.narrowCategories?.map(i => (\r\n                                <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                ) : null}\r\n                {currentCategory.person ? (\r\n                    \r\n                    <FormControl className={props.classes.formControl}>\r\n                        <InputLabel htmlFor=\"person_id\">Person</InputLabel>\r\n                        <Select\r\n                            onChange={handleFormChange}\r\n                            value={formState.person_id}\r\n                            name=\"person_id\"\r\n                            labelId=\"person_id\"\r\n                            label=\"Person\"\r\n                            >\r\n                            {persons.map(i => (\r\n                                <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                                ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                ) : null}\r\n                <TextField\r\n                    onChange={handleFormChange}\r\n                    value={formState.notes}\r\n                    label=\"Notes\"\r\n                    name=\"notes\"\r\n                    type=\"string\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    >Submit</Button>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        setFormState(initialFormState)\r\n                        props.handleClose()\r\n                    }\r\n                }\r\n                >Close</Button>\r\n            </form>\r\n                </DialogContent>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport API from '../utils/API'\r\nimport { AuthContext } from '../App'\r\nimport type { IncomeFormType } from '../interfaces/Interfaces'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    InputAdornment,\r\n    Typography,\r\n    DialogContent\r\n} from '@material-ui/core';\r\n// import 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { saveRecord } from '../utils/db';\r\n\r\n\r\nexport default function AddRecordsForm(props: {\r\n    classes: { root: string, formControl: string, dialog: string },\r\n    handleClose: Function,\r\n    setOpenBackdrop: Function\r\n}) {\r\n\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    const initialFormState = {\r\n        date: new Date(Date.now()),\r\n        amount: NaN,\r\n        earner_id: NaN,\r\n        source: \"\",\r\n    }\r\n\r\n    // Form control state\r\n    const [formState, setFormState] = useState<IncomeFormType>(initialFormState)\r\n\r\n    // Hard coded Ids\r\n    const earners = [\r\n        { name: \"Alexa\", id: 3 },\r\n        { name: \"Eli\", id: 1 },\r\n        { name: \"Rent\", id: 8 },\r\n        { name: \"Sales\", id: 10 },\r\n        { name: \"Gift\", id: 11 },\r\n    ]\r\n\r\n    function handleFormChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }>): void {\r\n        let name = event.target.name as keyof typeof formState\r\n        setFormState({ ...formState, [name]: event.target.value })\r\n    }\r\n\r\n    function handleDateChange(date: Date | null) {\r\n        setFormState({ ...formState, date: date });\r\n    };\r\n\r\n    async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\r\n        event.preventDefault()\r\n        if (!formState.date || !formState.amount || !formState.earner_id || !formState.source) {\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Please fill out all fields\",\r\n                open: true\r\n            })\r\n            return\r\n        }\r\n        let formStateConvertedDate: any = { ...formState }\r\n        try {\r\n            formStateConvertedDate.date = formStateConvertedDate.date?.toLocaleDateString(\"en-US\")\r\n            props.setOpenBackdrop(true)\r\n            await API.postIncome(Auth.token, formStateConvertedDate)\r\n            props.setOpenBackdrop(false)\r\n            setAlertState({\r\n                severity: \"success\",\r\n                message: \"Record Saved!\",\r\n                open: true\r\n            })\r\n        } catch (err) {\r\n            props.setOpenBackdrop(false)\r\n            if (err.message === \"Error! 500\") {\r\n                setAlertState({\r\n                    severity: \"error\",\r\n                    message: \"Server Error! Contact Eli\",\r\n                    open: true\r\n                })\r\n                return\r\n            } else {\r\n                saveRecord('income', formStateConvertedDate)\r\n                setAlertState({\r\n                    severity: \"warning\",\r\n                    message: \"Record Saved Locally\",\r\n                    open: true\r\n                })\r\n                if (err.message === \"Unauthorized\") {\r\n                    setAuth({ type: 'LOGOUT' })\r\n                }\r\n            }\r\n        } finally {\r\n            setFormState(initialFormState)\r\n        }\r\n    }\r\n\r\n    return (\r\n            <DialogContent>\r\n                <Typography variant=\"h5\" component=\"h5\" className={props.classes.root}>Log Income</Typography>\r\n                <form className={props.classes.root} onSubmit={handleFormSubmit}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            name=\"Date\"\r\n                            label=\"Date\"\r\n                            value={formState.date}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <TextField\r\n                        onChange={handleFormChange}\r\n                        value={formState.source}\r\n                        label=\"Source\"\r\n                        name=\"source\"\r\n                        type=\"string\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <TextField\r\n                        onChange={handleFormChange}\r\n                        value={formState.amount}\r\n                        label=\"Amount\"\r\n                        name=\"amount\"\r\n                        type=\"number\"\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                        inputProps={{ step: \"0.01\" }}\r\n                    />\r\n                    <FormControl className={props.classes.formControl}>\r\n                        <InputLabel htmlFor=\"earner_id\">Person</InputLabel>\r\n                        <Select\r\n                            onChange={handleFormChange}\r\n                            value={formState.earner_id}\r\n                            name=\"earner_id\"\r\n                            labelId=\"earner_id\"\r\n                            label=\"Person\"\r\n                        >\r\n                            {earners.map(i => (\r\n                                <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >Submit</Button>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => {\r\n                            setFormState(initialFormState)\r\n                            props.handleClose()\r\n                        }}\r\n                    >Close</Button>\r\n                </form>\r\n            </DialogContent>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Paper, Table, TableBody, TableContainer, TableCell, TableRow, TableHead } from '@material-ui/core';\r\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles'\r\nimport { TableDataEntry } from '../interfaces/Interfaces';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\n// import StaticRow from './StaticRow';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: theme.palette.common.white,\r\n            padding: 10,\r\n            fontSize: 16\r\n        },\r\n        body: {\r\n            padding: 10,\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst DarkTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.default,\r\n            cursor: 'pointer'\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nconst LightTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: blueGrey[800],\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nconst ExtraLightTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: blueGrey[700],\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nexport default function PivotTable(props: {\r\n    state:\r\n    {\r\n        schema:\r\n        {\r\n            fields: { name: string }[]\r\n        },\r\n        data: TableDataEntry[]\r\n\r\n    },\r\n}) {\r\n\r\n    const [show, setShow] = useState<boolean[]>([false])\r\n\r\n    function toggleShowRow(i: number) {\r\n        let newShow = [...show]\r\n        newShow[i] = !newShow[i]\r\n        setShow(newShow)\r\n    }\r\n\r\n    const pivotState = props.state.data.reduce((a, b) => {\r\n        if (b.Broad_category) {\r\n            if (a[b.Broad_category]) {\r\n                a[b.Broad_category].total += parseFloat(b.Amount);\r\n            } else {\r\n                a[b.Broad_category] = { total: parseFloat(b.Amount), narrow_categories: {} };\r\n            }\r\n            if (b.Narrow_category) {\r\n                if (a[b.Broad_category].narrow_categories[b.Narrow_category]) {\r\n                    a[b.Broad_category].narrow_categories[b.Narrow_category].total += parseFloat(b.Amount);\r\n                } else {\r\n                    a[b.Broad_category].narrow_categories[b.Narrow_category] = {total: parseFloat(b.Amount), persons: {}}   ;\r\n                }\r\n                if (b.Person) {\r\n                    if (a[b.Broad_category].narrow_categories[b.Narrow_category].persons[b.Person]) {\r\n                        a[b.Broad_category].narrow_categories[b.Narrow_category].persons[b.Person] += parseFloat(b.Amount);\r\n                    } else {\r\n                        a[b.Broad_category].narrow_categories[b.Narrow_category].persons[b.Person] = parseFloat(b.Amount);\r\n                    }\r\n                }\r\n            } else if (b.Person) {\r\n                if (a[b.Broad_category].narrow_categories[\"--\"]?.persons[b.Person]) {\r\n                    a[b.Broad_category].narrow_categories[\"--\"].persons[b.Person] += parseFloat(b.Amount);\r\n                    a[b.Broad_category].narrow_categories[\"--\"].total += parseFloat(b.Amount);\r\n                } else {\r\n                a[b.Broad_category].narrow_categories = {...a[b.Broad_category].narrow_categories, \"--\": {persons: {[b.Person]: parseFloat(b.Amount)}, total: parseFloat(b.Amount)}}\r\n                }\r\n            }\r\n        }\r\n        return a\r\n    }, {} as any)\r\n\r\n    console.log(pivotState)\r\n\r\n    useEffect(() => {\r\n        let showState = Object.keys(pivotState).map((i: any) => false)\r\n        setShow(showState)\r\n    }, [props])\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>\r\n                            Broad category\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            Narrow Category\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            Person\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            Amount\r\n                        </StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {Object.keys(pivotState).map((bCat, i) => (\r\n                        <>\r\n                            <DarkTableRow key={i} onClick={() => toggleShowRow(i)}>\r\n                                <StyledTableCell>\r\n                                    {bCat}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    TOTAL\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    {/* Empty Cell */}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    ${pivotState[bCat].total.toFixed(2)}\r\n                                </StyledTableCell>\r\n                            </DarkTableRow>\r\n                            {pivotState[bCat].narrow_categories && show[i] ? (\r\n                                Object.keys(pivotState[bCat].narrow_categories).map(nCat => (\r\n                                    <>\r\n                                        <LightTableRow>\r\n                                            <StyledTableCell>\r\n                                                {/* Empty Cell */}\r\n                                            </StyledTableCell>\r\n                                            <StyledTableCell>\r\n                                                {nCat}\r\n                                            </StyledTableCell>\r\n                                            <StyledTableCell>\r\n                                                TOTAL\r\n                                            </StyledTableCell>\r\n                                            <StyledTableCell>\r\n                                                ${pivotState[bCat].narrow_categories[nCat].total.toFixed(2)}\r\n                                            </StyledTableCell>\r\n                                        </LightTableRow>\r\n                                        {pivotState[bCat].narrow_categories[nCat].persons ? (\r\n                                            Object.keys(pivotState[bCat].narrow_categories[nCat].persons).map((person: string) => (\r\n                                                <ExtraLightTableRow>\r\n                                                    <StyledTableCell>\r\n                                                    </StyledTableCell>\r\n                                                    <StyledTableCell>\r\n                                                    </StyledTableCell>\r\n                                                    <StyledTableCell>\r\n                                                        {person}\r\n                                                    </StyledTableCell>\r\n                                                    <StyledTableCell>\r\n                                                        ${pivotState[bCat].narrow_categories[nCat].persons[person].toFixed(2)}\r\n\r\n                                                    </StyledTableCell>\r\n                                                </ExtraLightTableRow>\r\n                                            ))\r\n                                            ) : null\r\n                                        }\r\n                                    </>\r\n                                ))\r\n                            ) : null}\r\n                        </>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import React from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n    MenuItem,\r\n    Button\r\n} from '@material-ui/core'\r\nimport { FormStateType } from '../interfaces/Interfaces'\r\n\r\nexport default function Form({\r\n    classes,\r\n    handleFormSubmit,\r\n    handleFormChange,\r\n    formState }: {\r\n        classes: {\r\n            root: string,\r\n            formControl: string\r\n        },\r\n        handleFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void,\r\n        handleFormChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }> | React.ChangeEvent<HTMLSelectElement>) => void,\r\n        formState: FormStateType\r\n    }) {\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Card variant=\"outlined\">\r\n                <form onSubmit={handleFormSubmit} className={classes.root}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel htmlFor=\"form\">Report</InputLabel>\r\n                        <Select\r\n                            name=\"form\"\r\n                            label=\"Report\"\r\n                            labelId=\"form\"\r\n                            value={formState.form}\r\n                            onChange={handleFormChange}>\r\n                            <MenuItem value=\"expenses\">Expenses</MenuItem>\r\n                            <MenuItem value=\"income\">Income</MenuItem>\r\n                            <MenuItem value=\"pivot\">Pivot Table</MenuItem>\r\n                            <MenuItem value=\"search\">Search</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    {formState.form === \"search\" ? (\r\n                        <>\r\n                            <TextField\r\n                                onChange={handleFormChange}\r\n                                value={formState.search}\r\n                                label=\"Search\"\r\n                                name=\"search\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                            <>\r\n                                <TextField\r\n                                    onChange={handleFormChange}\r\n                                    value={formState.year}\r\n                                    label=\"Year\"\r\n                                    name=\"year\"\r\n                                    type=\"number\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel htmlFor=\"month2\">Month</InputLabel>\r\n                                    <Select\r\n                                        onChange={handleFormChange}\r\n                                        value={formState.month}\r\n                                        name=\"month\"\r\n                                        labelId=\"month2\"\r\n                                        label=\"Month\"\r\n                                    >\r\n                                        <MenuItem value={1}>January</MenuItem>\r\n                                        <MenuItem value={2}>February</MenuItem>\r\n                                        <MenuItem value={3}>March</MenuItem>\r\n                                        <MenuItem value={4}>April</MenuItem>\r\n                                        <MenuItem value={5}>May</MenuItem>\r\n                                        <MenuItem value={6}>June</MenuItem>\r\n                                        <MenuItem value={7}>July</MenuItem>\r\n                                        <MenuItem value={8}>August</MenuItem>\r\n                                        <MenuItem value={9}>September</MenuItem>\r\n                                        <MenuItem value={10}>October</MenuItem>\r\n                                        <MenuItem value={11}>November</MenuItem>\r\n                                        <MenuItem value={12}>December</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </>\r\n                        )}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        View\r\n                        </Button>\r\n                </form>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { AuthContext } from '../App'\r\nimport { emptyDatabase } from '../utils/db';\r\nimport API from '../utils/API'\r\nimport { FormStateType } from '../interfaces/Interfaces';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        title: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginRight: theme.spacing(1),\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(3),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: '20ch',\r\n            },\r\n        },\r\n        sectionDesktop: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'flex',\r\n            },\r\n        },\r\n        sectionMobile: {\r\n            display: 'flex',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function PrimarySearchAppBar({ handleFormChange, handleFormSubmit, formState }: {\r\n    handleFormChange: (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void,\r\n    handleFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void,\r\n    formState: FormStateType\r\n}) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const { Auth, setAuth } = React.useContext(AuthContext)\r\n\r\n    function downloadFile(): void {\r\n        API.downloadFile(Auth.token, `${Auth.user}_expenses.xlsx`, \"2020-02-01\", \"2020-05-01\")\r\n        handleMenuClose()\r\n    }\r\n\r\n    function logout(): void {\r\n        setAuth({ type: 'LOGOUT' })\r\n        emptyDatabase()\r\n    }\r\n\r\n    const handleMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={downloadFile}>Downloads</MenuItem>\r\n            <MenuItem onClick={logout}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Finances\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <form\r\n                            onSubmit={handleFormSubmit}\r\n                        >\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                                name=\"search\"\r\n                                value={formState.search}\r\n                                onChange={handleFormChange}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                        <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n\r\n                    <Button\r\n                        color=\"inherit\"\r\n                        onClick={downloadFile}\r\n                        // edge=\"end\"\r\n                        >Download\r\n                    </Button>\r\n                    <Button\r\n                        color=\"inherit\"\r\n                        onClick={logout}\r\n                        // edge=\"end\"\r\n                        >Logout\r\n                    </Button>\r\n                        </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReportTable from '../components/Table';\r\nimport AddExpensesForm from '../components/AddExpensesForm'\r\nimport AddIncomeForm from '../components/AddIncomeForm'\r\nimport API from '../utils/API'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { AuthContext } from '../App'\r\nimport type {\r\n    TableDataEntry,\r\n    DataListStateType,\r\n    AllDataListsType,\r\n    FormStateType,\r\n    InputName\r\n} from '../interfaces/Interfaces'\r\nimport {\r\n    Backdrop,\r\n    CircularProgress,\r\n    Dialog,\r\n    Box,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport PivotTable from '../components/PivotTable';\r\nimport Form from '../components/Form';\r\nimport MyAppBar from '../components/MyAppBar'\r\n\r\nfunction Home() {\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    // Form control state\r\n    const [formState, setFormState] = useState<FormStateType>(\r\n        {\r\n            form: \"expenses\",\r\n            year: new Date(Date.now()).getUTCFullYear(),\r\n            month: new Date(Date.now()).getUTCMonth() + 1,\r\n            search: \"\"\r\n        }\r\n    )\r\n\r\n    const [incomeTableState, setIncomeTableState] = useState<{ schema: { fields: [] }, data: TableDataEntry[] }>(\r\n        {\r\n            schema: { fields: [] },\r\n            data: [{\r\n                Amount: \"\",\r\n                Date: \"\",\r\n                Source: \"\",\r\n                Person: \"\",\r\n                id: NaN,\r\n                source_id: NaN,\r\n                earner_id: NaN\r\n            }]\r\n        }\r\n    )\r\n\r\n    const [expensesTableState, setExpensesTableState] = useState<{ schema: { fields: [] }, data: TableDataEntry[] }>(\r\n        {\r\n            schema: { fields: [] },\r\n            data: [{\r\n                Amount: \"\",\r\n                Date: \"\",\r\n                Source: \"\",\r\n                Vendor: \"\",\r\n                Broad_category: \"\",\r\n                Narrow_category: \"\",\r\n                Person: \"\",\r\n                Notes: \"\",\r\n                entry_id: NaN\r\n            }]\r\n        }\r\n\r\n    )\r\n\r\n    const [searchTableState, setSearchTableState] = useState<{ schema: { fields: [] }, data: TableDataEntry[] }>(\r\n        {\r\n            schema: { fields: [] },\r\n            data: [{\r\n                Amount: \"\",\r\n                Date: \"\",\r\n                Source: \"\",\r\n                Vendor: \"\",\r\n                Broad_category: \"\",\r\n                Narrow_category: \"\",\r\n                Person: \"\",\r\n                Notes: \"\",\r\n                entry_id: NaN\r\n            }]\r\n        }\r\n\r\n    )\r\n\r\n    const [searchFormState, setSearchFormState] = useState<string>(\"\")\r\n\r\n\r\n    // State for datalists\r\n    const [dataListsState, setDataListsState] = useState<AllDataListsType>({\r\n        source: [],\r\n        person_earner: [],\r\n        narrow_category: [],\r\n        broad_category: [],\r\n        vendor: []\r\n    })\r\n\r\n    // Loading Backdrop display state\r\n    const [openBackdrop, setOpenBackdrop] = useState(false);\r\n\r\n    // Converts dates to human-readable format\r\n    function formatDates(entry: TableDataEntry): TableDataEntry {\r\n        if (!entry.Date) {\r\n            return entry\r\n        } else {\r\n            let date = new Date(entry.Date);\r\n            let year = date.getUTCFullYear();\r\n            let month = (1 + date.getUTCMonth()).toString();\r\n            month = month.length > 1 ? month : '0' + month;\r\n            let day = date.getUTCDate().toString();\r\n            day = day.length > 1 ? day : '0' + day;\r\n            let dateString = month + '/' + day + '/' + year;\r\n            entry.Date = dateString\r\n            return entry\r\n        }\r\n    }\r\n\r\n    // Form control\r\n    function handleFormChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }> | React.ChangeEvent<HTMLSelectElement>): void {\r\n        let name = event.target.name as keyof typeof formState\r\n        setFormState({ ...formState, [name]: event.target.value })\r\n    }\r\n\r\n    async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\r\n        try {\r\n            event.preventDefault()\r\n            let route = formState.form\r\n            setOpenBackdrop(true)\r\n            let response = await API[route](Auth.token, formState)\r\n            setOpenBackdrop(false)\r\n            // Formatting the dates the hard way because javascript doesn't support strftime...\r\n            if (route !== 'pivot') {\r\n                response.data = response.data.map(formatDates)\r\n            }\r\n            switch (route) {\r\n                case \"expenses\":\r\n                    setExpensesTableState(response)\r\n                    break;\r\n                case \"income\":\r\n                    setIncomeTableState(response)\r\n                    break;\r\n                case \"pivot\":\r\n                    setExpensesTableState(response)\r\n                    break;\r\n                case \"search\":\r\n                    setSearchTableState(response)\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            if (err.message === \"Unauthorized\") {\r\n                setAuth({ type: 'LOGOUT' })\r\n            }\r\n            setOpenBackdrop(false)\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Error Fetching Data\",\r\n                open: true\r\n            })\r\n        }\r\n    }\r\n\r\n    // Helper function for assigning an id to a TableDataEntry if user input matches an existing record\r\n    function assignId(\r\n        name: InputName,\r\n        value: string) {\r\n\r\n        let state;\r\n        let id;\r\n\r\n        switch (name) {\r\n            case \"Person\":\r\n                state = dataListsState.person_earner;\r\n                id = 'person_id';\r\n                break;\r\n            case \"Source\":\r\n                state = dataListsState.source;\r\n                id = 'source_id';\r\n                break;\r\n            case \"Broad_category\":\r\n                state = dataListsState.broad_category;\r\n                id = 'broad_category_id';\r\n                break;\r\n            case \"Narrow_category\":\r\n                state = dataListsState.narrow_category;\r\n                id = 'narrow_category_id';\r\n                break;\r\n            case \"Vendor\":\r\n                state = dataListsState.vendor;\r\n                id = 'vendor_id';\r\n                break;\r\n        }\r\n        let dataListItem = state.filter((i: DataListStateType) => i.name === value)[0]\r\n        if (dataListItem) {\r\n            return { id: id, dataListItem: dataListItem }\r\n        } else {\r\n            return { id: null, dataListItem: null }\r\n        }\r\n    }\r\n\r\n    // Keep global state synced with InputRow state\r\n    async function handleExpensesChange(event: React.ChangeEvent<HTMLInputElement>, index: number): Promise<void> {\r\n        try {\r\n            let { name, value } = event.target;\r\n            let newExpensesTableStateData: TableDataEntry[] = [...expensesTableState.data]\r\n            let updatedRow: TableDataEntry = { ...newExpensesTableStateData[index], [name]: value }\r\n            if (name === \"Person\" || name === \"Broad_category\" || name === \"Narrow_category\" || name === \"Vendor\") {\r\n                let { id, dataListItem } = assignId(name as InputName, value)\r\n                if (id && dataListItem) {\r\n                    updatedRow = { ...updatedRow, [id]: dataListItem.id }\r\n                }\r\n            }\r\n            newExpensesTableStateData[index] = updatedRow\r\n            setExpensesTableState({ ...expensesTableState, data: newExpensesTableStateData })\r\n\r\n        } catch (err) {\r\n            console.error(err)\r\n            if (err.message === \"Unauthorized\") {\r\n                setAuth({ type: 'LOGOUT' })\r\n            }\r\n        }\r\n    }\r\n\r\n    // Keep global state synced with InputRow state\r\n    async function handleIncomeChange(event: React.ChangeEvent<HTMLInputElement>, index: number): Promise<void> {\r\n        try {\r\n            let { name, value } = event.target;\r\n            let newIncomeTableStateData: TableDataEntry[] = [...incomeTableState.data]\r\n            let updatedRow: TableDataEntry = { ...newIncomeTableStateData[index], [name]: value }\r\n            if (name === \"Person\" || name === \"Source\") {\r\n                let { id, dataListItem } = assignId(name as InputName, value)\r\n                if (id && dataListItem) {\r\n                    updatedRow = { ...updatedRow, [id]: dataListItem.id }\r\n                }\r\n            }\r\n            newIncomeTableStateData[index] = updatedRow\r\n            setIncomeTableState({ ...incomeTableState, data: newIncomeTableStateData })\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    // Update an row altered by the user\r\n    async function updateExpensesRow(index: number): Promise<void> {\r\n        try {\r\n            await API.updateExpenses(Auth.token, expensesTableState.data[index])\r\n            setAlertState({\r\n                severity: \"success\",\r\n                message: \"Record updated!\",\r\n                open: true\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Error: Failed to save!\",\r\n                open: true\r\n            })\r\n        }\r\n    }\r\n\r\n    // Update an row altered by the user\r\n    async function updateIncomeRow(index: number): Promise<void> {\r\n        try {\r\n            await API.updateIncome(Auth.token, incomeTableState.data[index])\r\n            setAlertState({\r\n                severity: \"success\",\r\n                message: \"Record updated!\",\r\n                open: true\r\n            })\r\n        } catch (err) {\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Error: Failed to save!\",\r\n                open: true\r\n            })\r\n        }\r\n    }\r\n\r\n    // Delete a row from the database\r\n    async function deleteEntry(id: number | undefined) {\r\n        try {\r\n            if (formState.form === \"expenses\") {\r\n                await API.deleteExpenses(Auth.token, id);\r\n                let newExpensesTableStateData = expensesTableState.data.filter(entry => entry.entry_id !== id)\r\n                setExpensesTableState({ ...expensesTableState, data: newExpensesTableStateData })\r\n            } else if (formState.form === \"income\") {\r\n                await API.deleteIncome(Auth.token, id);\r\n                let newIncomeTableStateData = incomeTableState.data.filter(entry => entry.id !== id)\r\n                setIncomeTableState({ ...incomeTableState, data: newIncomeTableStateData })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n            if (err === 'Unauthorized') {\r\n                setAuth({ type: 'LOGOUT' })\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create classes to use for styling\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            formControl: {\r\n                margin: theme.spacing(1),\r\n                minWidth: '7em'\r\n            },\r\n            selectEmpty: {\r\n                marginTop: theme.spacing(2),\r\n            },\r\n            root: {\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap',\r\n                [theme.breakpoints.up('md')]: {\r\n                    flexWrap: 'noWrap',\r\n                },\r\n                '& > *': {\r\n                    margin: theme.spacing(1),\r\n                    [theme.breakpoints.down('xs')]: {\r\n                        width: '100%',\r\n                    },\r\n                },\r\n            },\r\n            wallchart: {\r\n                width: '100%'\r\n            },\r\n            logoutBtn: {\r\n                float: 'right',\r\n                margin: '1em',\r\n            },\r\n            downloadBtn: {\r\n                float: 'left',\r\n                margin: '1em',\r\n            },\r\n            backdrop: {\r\n                zIndex: 1301, // To be in front of Dialog at 1300\r\n                color: '#fff',\r\n            },\r\n            speedDial: {\r\n                position: 'fixed',\r\n                bottom: theme.spacing(2),\r\n                right: theme.spacing(2),\r\n            },\r\n            dialog: {\r\n                width: '100%',\r\n            },\r\n            datePicker: {\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginLeft: '-10px'\r\n                },\r\n            },\r\n            mobileTitle: {\r\n                display: 'none',\r\n                [theme.breakpoints.down('sm')]: {\r\n                    display: 'flex',\r\n                },\r\n                justifyContent: 'center',\r\n            },\r\n        })\r\n    );\r\n    const classes = useStyles();\r\n\r\n    // SpeedDial controls\r\n    const [speedDialOpen, setSpeedDialOpen] = React.useState(false);\r\n\r\n    const actions = [\r\n        { icon: <AddIcon />, name: 'Expenses', action: handleExpensesOpen, operation: 'product' },\r\n        { icon: <AddIcon />, name: 'Income', action: handleIncomeOpen, operation: 'tag' }\r\n    ]\r\n\r\n    const handleSpeedDialClose = () => {\r\n        setSpeedDialOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setSpeedDialOpen(true);\r\n    };\r\n\r\n    function handleExpensesOpen(): void {\r\n        setAddExpensesOpen(true)\r\n        setSpeedDialOpen(false)\r\n    }\r\n\r\n    function handleIncomeOpen(): void {\r\n        setAddIncomeOpen(true)\r\n        setSpeedDialOpen(false)\r\n    }\r\n\r\n    // Controls for Dialogs\r\n    const [addExpensesOpen, setAddExpensesOpen] = useState(false)\r\n    const [addIncomeOpen, setAddIncomeOpen] = useState(false)\r\n    function handleClose() {\r\n        setAddExpensesOpen(false)\r\n        setAddIncomeOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getDataLists(): Promise<void> {\r\n            let datalists = await API.dataList(Auth.token)\r\n            setDataListsState(datalists)\r\n        }\r\n        getDataLists()\r\n    }, [])\r\n\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <Box component='div' className=\"Home\">\r\n            <MyAppBar handleFormChange={handleFormChange} handleFormSubmit={handleFormSubmit} formState={formState}/>\r\n            <Box component='header' className=\"header\">\r\n            <Typography className={classes.mobileTitle} variant=\"h6\" noWrap>\r\n                        Finances\r\n          </Typography>\r\n                <img src=\"/wallchart\" alt=\"Wall Chart\" className={classes.wallchart} />\r\n                <Form\r\n                    classes={classes}\r\n                    handleFormSubmit={handleFormSubmit}\r\n                    handleFormChange={handleFormChange}\r\n                    formState={formState}\r\n                />\r\n            </Box >\r\n            <div className=\"body\">\r\n                {formState.form === \"income\" && incomeTableState.data[0]?.id ? (\r\n                    <ReportTable\r\n                        state={incomeTableState}\r\n                        dataLists={dataListsState}\r\n                        handleChange={handleIncomeChange}\r\n                        handleUpdate={updateIncomeRow}\r\n                        deleteEntry={deleteEntry}\r\n                        form={formState.form}\r\n                    />\r\n                ) : null}\r\n                {formState.form === \"expenses\" && expensesTableState.data[0]?.entry_id ? (\r\n                    <ReportTable\r\n                        state={expensesTableState}\r\n                        dataLists={dataListsState}\r\n                        handleChange={handleExpensesChange}\r\n                        handleUpdate={updateExpensesRow}\r\n                        deleteEntry={deleteEntry}\r\n                        form={formState.form}\r\n                    />\r\n                ) : null}\r\n                {formState.form === \"search\" && searchTableState.data[0]?.entry_id ? (\r\n                    <ReportTable\r\n                        state={searchTableState}\r\n                        dataLists={dataListsState}\r\n                        handleChange={handleExpensesChange}\r\n                        handleUpdate={updateExpensesRow}\r\n                        deleteEntry={deleteEntry}\r\n                        form={formState.form}\r\n                    />\r\n                ) : null}\r\n                {formState.form === \"pivot\" && expensesTableState.data[0]?.entry_id ? (\r\n                    <PivotTable state={expensesTableState} />\r\n                ) : null}\r\n            </div>\r\n            <Dialog onClose={handleClose} open={addExpensesOpen} maxWidth='xl'>\r\n                <AddExpensesForm\r\n                    classes={classes}\r\n                    handleClose={handleClose}\r\n                    setOpenBackdrop={setOpenBackdrop}\r\n                />\r\n            </Dialog>\r\n            <Dialog onClose={handleClose} open={addIncomeOpen} maxWidth='xl'>\r\n                <AddIncomeForm\r\n                    classes={classes}\r\n                    handleClose={handleClose}\r\n                    setOpenBackdrop={setOpenBackdrop}\r\n                />\r\n            </Dialog>\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial example\"\r\n                className={classes.speedDial}\r\n                // hidden={hidden}\r\n                icon={<SpeedDialIcon />}\r\n                onClose={handleSpeedDialClose}\r\n                onOpen={handleOpen}\r\n                open={speedDialOpen}\r\n                onMouseLeave={() => { }}\r\n            >\r\n                {actions.map((action) => (\r\n                    <SpeedDialAction\r\n                        key={action.name}\r\n                        icon={action.icon}\r\n                        tooltipTitle={action.name}\r\n                        tooltipOpen\r\n                        onClick={action.action}\r\n                    />\r\n                ))}\r\n            </SpeedDial>\r\n            <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                <CircularProgress disableShrink color=\"inherit\" />\r\n            </Backdrop>\r\n        </Box >\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport API from '../utils/API'\r\nimport { AuthContext } from '../App'\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexWrap: 'wrap',\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                [theme.breakpoints.down('xs')]: {\r\n                    width: '100%',\r\n                },\r\n            }\r\n        }\r\n    })\r\n);\r\n\r\nexport default function Login() {\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    const [loginFormState, setLoginFormState] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const inputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        setLoginFormState({\r\n            ...loginFormState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const formSubmit = async (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        try {\r\n            await API.login(loginFormState).then(newToken => {\r\n                setAuth({ type: 'LOGIN', payload: { user: loginFormState.username, token: newToken.token } })\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Incorrect username or password\",\r\n                open: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n\r\n    if (Auth.loggedIn) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Login\" style={{ textAlign: 'center' }}>\r\n                <h4>Login</h4>\r\n                <form className={classes.root} onSubmit={formSubmit}>\r\n                    <TextField\r\n                        onChange={inputChange}\r\n                        value={loginFormState.username}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        label=\"username\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        onChange={inputChange}\r\n                        value={loginFormState.password}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"password\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" name=\"login\" type=\"submit\">Login</Button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nexport default function Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from './Alert'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { AlertStateType } from '../interfaces/Interfaces';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    snackbar: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSnackbar({ state, setState }: {\r\n    state: AlertStateType,\r\n    setState: React.Dispatch<React.SetStateAction<AlertStateType>>\r\n    }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setState({ ...state, open: false });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.snackbar}>\r\n            <Snackbar\r\n                open={state.open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n\r\n            >\r\n                <Alert onClose={handleClose} severity={state.severity}>\r\n                    {state.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState, useReducer } from 'react'\nimport { BrowserRouter as Router, Route, Redirect, RouteComponentProps } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Login from './pages/Login'\nimport API from './utils/API'\nimport { testDatabase } from './utils/db'\nimport './App.css';\nimport CustomizedSnackbar from './components/SnackBar'\nimport { AlertStateType, Auth, ContextState } from './interfaces/Interfaces'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { green, blueGrey, red } from '@material-ui/core/colors'\n\nimport { MuiPickersOverrides } from '@material-ui/pickers/typings/overrides';\nimport { CssBaseline, ThemeOptions } from '@material-ui/core'\n\n// Types to allow for theme customization\ntype overridesNameToClassKey = {\n  [P in keyof MuiPickersOverrides]: keyof MuiPickersOverrides[P];\n};\n\ntype CustomType = {\n  MuiPickersBasePicker: {\n    pickerView: {\n      maxWidth?: string;\n    };\n  };\n};\n\ndeclare module '@material-ui/core/styles/overrides' {\n  interface ComponentNameToClassKey extends overridesNameToClassKey { }\n  export interface ComponentNameToClassKey extends CustomType { }\n};\n\n// Instantiating default theme to use breakpoints\nconst defaultTheme = createMuiTheme();\n\n// Theme factory\nfunction createMyTheme(options: ThemeOptions) {\n  return createMuiTheme({\n    overrides: {\n      MuiPickersBasePicker: {\n        container: {\n          backgroundColor: blueGrey[900],\n          [defaultTheme.breakpoints.down(\"xs\")]: {\n          marginLeft: '-10px',\n          }\n        },\n      },\n      MuiCard: {\n        root: {\n          backgroundColor: blueGrey[900]\n        }\n      },\n      MuiDialogContent: {\n        root: {\n          backgroundColor: blueGrey[900]\n        }\n      },\n      MuiPickersCalendarHeader: {\n        iconButton: {\n          backgroundColor: blueGrey[900]\n        }\n      }\n    },\n    ...options\n  })\n};\n\nconst theme = createMyTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: blueGrey[900],\n    },\n    primary: {\n      main: green[900]\n    },\n    secondary: {\n      main: red[900]\n    }\n  },\n});\n\n\n\n// Check if user is logged in before returning protected component/page\nconst ProtectedRoute = ({ component: Component, loggedIn, ...rest }: {\n  path: string,\n  loggedIn: boolean,\n  setLoggedIn: Function,\n  component: React.FunctionComponent<RouteComponentProps>,\n}): JSX.Element => (\n    <Route {...rest} render={props => (\n      loggedIn\n        ? <Component {...props} />\n        : <Redirect to='/login' />\n    )\n    } />\n\n  )\n\nexport const AuthContext = React.createContext<ContextState>({\n  Auth: {\n    loggedIn: false,\n    user: \"\",\n    token: \"\"\n  },\n  setAuth: (): void => { },\n  setAlertState: (): void => { }\n})\n\n\n\nexport default function App() {\n\n  const reducer = (state: Auth, action: { type: string, payload?: { user: string, token: string } }): Auth => {\n    if (action.type === 'LOGIN' && action.payload) {\n      localStorage.setItem(\"user\", action.payload.user);\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        loggedIn: true,\n        user: action.payload.user,\n        token: action.payload.token\n      };\n    } else if (action.type === 'LOGOUT') {\n      localStorage.clear();\n      return {\n        ...state,\n        loggedIn: false,\n        user: \"\",\n        token: \"\",\n      };\n    } else {\n      return state;\n    }\n  };\n\n  const [Auth, setAuth] = useReducer(reducer, {\n    loggedIn: false,\n    user: \"\",\n    token: \"\"\n  })\n\n  const [alertState, setAlertState] = useState<AlertStateType>({\n    severity: undefined,\n    message: \"\",\n    open: false,\n  })\n\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    const user = localStorage.getItem(\"user\")\n    if (token) {\n      API.checkAuth(token)\n        .then(res => setAuth({ type: 'LOGIN', payload: { user: res.username, token: token } }))\n        .catch(err => {\n          if (err.message === \"Unauthorized\") {\n            setAuth({ type: 'LOGOUT' })\n          } else {\n            setAuth({ type: 'LOGIN', payload: { user: user || \"\", token: token || \"\" } })\n          }\n        })\n    }\n  }, [])\n\n\n  useEffect(() => {\n    testDatabase()\n  })\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AuthContext.Provider\n        value={{ Auth, setAuth, setAlertState }}\n      >\n\n        <Router>\n          <ProtectedRoute path=\"/\"\n            loggedIn={Auth.loggedIn}\n            setLoggedIn={setAuth}\n            // offline={offline}\n            component={Home}\n          />\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n        </Router>\n        <CustomizedSnackbar\n          state={alertState}\n          setState={setAlertState}\n        />\n      </AuthContext.Provider>\n    </ThemeProvider>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.ts`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}