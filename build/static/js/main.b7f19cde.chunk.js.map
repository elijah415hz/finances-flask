{"version":3,"sources":["components/InputRow.tsx","components/StaticRow.tsx","components/Table.tsx","utils/API.tsx","utils/db.tsx","components/AddExpensesForm.tsx","components/AddIncomeForm.tsx","pages/Home.tsx","pages/Login.tsx","components/Alert.tsx","components/SnackBar.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["StyledTableCell","withStyles","theme","createStyles","head","backgroundColor","palette","common","black","color","white","body","fontSize","padding","maxWidth","TableCell","StyledTableRow","root","action","hover","paddingLeft","TableRow","InputRow","props","useState","Amount","state","setState","makeDataList","propsState","id","map","entry","value","name","handleInputRowChange","event","target","useEffect","fields","filter","column","includes","onBlur","e","handleChange","i","onChange","className","list","style","width","dataLists","source","person_earner","narrow_category","broad_category","vendor","IconButton","onClick","handleUpdate","aria-label","deleteEntry","entry_id","StaticRow","ReportTable","myRef","createRef","current","scrollIntoView","behavior","primary","main","classes","makeStyles","table","minWidth","useStyles","TableContainer","component","Paper","Table","ref","TableHead","schema","replace","TableBody","data","form","checkStatus","res","parseMethod","status","Error","json","text","db","API","expenses","token","yearMonthObj","fetch","year","month","headers","then","postExpenses","method","JSON","stringify","postBatchExpenses","postIncome","postBatchIncome","deleteExpenses","updateExpenses","income","updateIncome","deleteIncome","pivot","dataList","login","checkAuth","a","openDB","upgrade","createObjectStore","autoIncrement","navigator","onLine","checkDatabase","saveRecord","record","put","emptyDatabase","clear","localStorage","getItem","getAll","pendingExpenses","length","pendingIncome","console","error","window","addEventListener","AddRecordsForm","React","useContext","AuthContext","Auth","setAuth","setAlertState","initialFormState","Date","now","NaN","person_id","broad_category_id","narrow_category_id","notes","formState","setFormState","currentCategory","setCurrentCategory","categories","narrowCategories","person","handleFormChange","category","preventDefault","severity","message","open","formStateConvertedDate","toLocaleDateString","type","DialogContent","Typography","variant","onSubmit","utils","DateFnsUtils","disableToolbar","fullWidth","format","margin","label","date","KeyboardButtonProps","TextField","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","position","inputProps","step","FormControl","formControl","InputLabel","htmlFor","Select","labelId","MenuItem","Button","handleClose","amount","earner_id","Home","getUTCFullYear","getUTCMonth","Source","Person","source_id","incomeTableState","setIncomeTableState","Vendor","Broad_category","Narrow_category","Notes","expensesTableState","setExpensesTableState","pivotTableState","setPivotTableState","dataListsState","setDataListsState","openBackdrop","setOpenBackdrop","formatDates","toString","day","getUTCDate","dateString","route","response","assignId","dataListItem","index","newExpensesTableStateData","updatedRow","err","newIncomeTableStateData","log","spacing","selectEmpty","marginTop","display","justifyContent","flexWrap","breakpoints","up","down","wallchart","logoutBtn","float","offline","textAlign","backdrop","zIndex","drawer","speedDial","bottom","right","dialog","datePicker","marginLeft","actions","icon","setAddExpensesOpen","setSpeedDialOpen","operation","setAddIncomeOpen","speedDialOpen","addExpensesOpen","addIncomeOpen","setOffline","datalists","getDataLists","Box","AppBar","Container","user","src","alt","Dialog","onClose","Card","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","onMouseLeave","SpeedDialAction","tooltipTitle","tooltipOpen","Backdrop","CircularProgress","disableShrink","Login","username","password","loginFormState","setLoginFormState","inputChange","formSubmit","newToken","payload","loggedIn","to","Alert","elevation","snackbar","CustomizedSnackbar","reason","Snackbar","autoHideDuration","defaultTheme","createMuiTheme","options","background","default","blueGrey","green","secondary","red","overrides","MuiPickersBasePicker","container","MuiCard","MuiDialogContent","MuiPickersCalendarHeader","iconButton","ProtectedRoute","Component","rest","render","createContext","App","useReducer","setItem","undefined","alertState","catch","testDatabase","ThemeProvider","CssBaseline","Provider","path","setLoggedIn","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","URL","process","href","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b7f19cde.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { dataListStateType, tableDataEntry, allDataListsType } from '../interfaces/Interfaces'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { IconButton, TableCell, TableRow } from '@material-ui/core'\r\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n      padding: 0,\r\n      maxWidth: '10ch',\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      '& input': {\r\n          backgroundColor: 'inherit',\r\n          paddingLeft: 0,\r\n      }\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nexport default function InputRow(props:\r\n    {\r\n        entry: tableDataEntry,\r\n        i: number,\r\n        fields: { name: string }[],\r\n        dataLists?: allDataListsType\r\n        handleChange: Function,\r\n        handleUpdate: Function,\r\n        deleteEntry: Function\r\n    }) {\r\n\r\n    const [state, setState] = useState<tableDataEntry>({ Amount: \"\" })\r\n\r\n    function makeDataList(propsState: dataListStateType[], id: string) {\r\n        return (\r\n            <datalist id={id}>\r\n                {propsState.map((entry: dataListStateType) => {\r\n                    return (\r\n                        <option\r\n                            value={entry.name}\r\n                            key={entry.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </datalist>\r\n        )\r\n    }\r\n\r\n    function handleInputRowChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        let { name, value } = event.target;\r\n        setState({ ...state, [name]: value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState(props.entry)\r\n    }, [props.entry])\r\n\r\n    return (\r\n        <StyledTableRow>\r\n            {props.fields\r\n                .filter(column => !column.name.includes(\"id\"))\r\n                .map(column => {\r\n                    return (\r\n                        <StyledTableCell \r\n                            \r\n                        >\r\n                            {column.name === 'Amount' ? <span>$</span> : null}\r\n                            <input\r\n                                name={column.name}\r\n                                onBlur={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                    props.handleChange(e, props.i)\r\n                                }}\r\n                                onChange={handleInputRowChange}\r\n                                className=\"tableInput\"\r\n                                value={state[column.name as keyof tableDataEntry] || \"\"}\r\n                                list={column.name}\r\n                                style={{width: '80%'}}\r\n                                // style={{width: `${(state[column.name as keyof tableDataEntry]?.toString().length || 12) + 3.5}ch`}}\r\n                            />\r\n                            {column.name === 'Source' && props.dataLists?.source ? (\r\n                                makeDataList(props.dataLists?.source, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Person' && props.dataLists?.person_earner ? (\r\n                                makeDataList(props.dataLists?.person_earner, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Narrow_category' && props.dataLists?.narrow_category ? (\r\n                                makeDataList(props.dataLists?.narrow_category, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Broad_category' && props.dataLists?.broad_category ? (\r\n                                makeDataList(props.dataLists?.broad_category, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Vendor' && props.dataLists?.vendor ? (\r\n                                makeDataList(props.dataLists?.vendor, column.name)\r\n                            ) : null}\r\n                        </StyledTableCell>\r\n                    )\r\n                })}\r\n            <StyledTableCell>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => props.handleUpdate(props.i)}\r\n                >\r\n                    <SaveIcon />\r\n                </IconButton>\r\n            </StyledTableCell>\r\n            <StyledTableCell>\r\n                <IconButton\r\n                    aria-label=\"delete\"\r\n                    color=\"secondary\"\r\n                    onClick={() => props.deleteEntry(state.entry_id || state.id)}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </StyledTableCell>\r\n        </StyledTableRow>\r\n    )\r\n}","import React from 'react'\r\nimport type {tableDataEntry} from '../interfaces/Interfaces'\r\n\r\nexport default function StaticRow(props:\r\n    {\r\n        entry: tableDataEntry,\r\n        i: number,\r\n        fields: { name: string }[],\r\n    }) {\r\n\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n                {props.fields\r\n                    .filter(column => !column.name.includes(\"id\"))\r\n                    .map(column => {\r\n                        return (\r\n                            <td key={props.i + column.name}>\r\n                                {column.name === 'Amount' ? <span>$</span> : null}\r\n                                <span\r\n                                    className=\"tableInput\"\r\n                                >{props.entry[column.name as keyof tableDataEntry] || \"\"}\r\n                                </span>\r\n\r\n                            </td>\r\n                        )\r\n                    })}\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}","import React, {useEffect, createRef} from 'react'\r\nimport InputRow from './InputRow'\r\nimport StaticRow from './StaticRow'\r\nimport type { tableDataEntry, allDataListsType } from \"../interfaces/Interfaces\"\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { makeStyles, createStyles, withStyles, lighten, Theme } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nexport default function ReportTable(props:\r\n    {\r\n        state:\r\n        {\r\n            schema:\r\n            {\r\n                fields: { name: string }[]\r\n            },\r\n            data: tableDataEntry[]\r\n\r\n        },\r\n        dataLists?: allDataListsType\r\n        handleChange: Function,\r\n        handleUpdate: Function,\r\n        deleteEntry: Function,\r\n        form?: string\r\n    }) {\r\n\r\n    const myRef = createRef<HTMLTableElement>()\r\n    const executeScroll = () => {\r\n        if (myRef.current) {\r\n            myRef.current.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        executeScroll()\r\n    }, [])\r\n    const StyledTableCell = withStyles((theme: Theme) =>\r\n        createStyles({\r\n            head: {\r\n                backgroundColor: theme.palette.primary.main,\r\n                color: theme.palette.common.white,\r\n            },\r\n        }),\r\n    )(TableCell);\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            table: {\r\n                minWidth: 650,\r\n            },\r\n        })\r\n    );\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} ref={myRef}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {props.state.schema.fields\r\n                            .filter(column => !column.name.includes(\"id\"))\r\n                            .map(column => {\r\n                                return (\r\n                                    <StyledTableCell key={column.name}>\r\n                                        {column.name.replace(\"_\", \" \")}\r\n                                    </StyledTableCell>\r\n                                )\r\n                            })}\r\n                        <StyledTableCell><span>Save</span></StyledTableCell>\r\n                        <StyledTableCell><span>Delete</span></StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className=\"tableBody\">\r\n                    {(props.state.data).map((entry: tableDataEntry, i: number) => {\r\n                        return props.form === \"pivot\" ?\r\n                            <StaticRow\r\n                                entry={entry}\r\n                                i={i}\r\n                                key={entry.entry_id || entry.id}\r\n                                fields={props.state.schema.fields}\r\n                            /> :\r\n                            <InputRow\r\n                                entry={entry}\r\n                                i={i}\r\n                                key={i}\r\n                                fields={props.state.schema.fields}\r\n                                handleChange={props.handleChange}\r\n                                handleUpdate={props.handleUpdate}\r\n                                dataLists={props.dataLists}\r\n                                deleteEntry={props.deleteEntry}\r\n                            />\r\n                    })}\r\n                </TableBody>\r\n\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import type {\r\n    allDataListsType, \r\n    formStateType, \r\n    tableDataEntry, \r\n    tableType,\r\n    expensesFormType,\r\n    incomeFormType} from '../interfaces/Interfaces'\r\n\r\n\r\nfunction checkStatus<T>(res: Response, parseMethod: string): Promise<T> {\r\n    if (res.status === 401) {\r\n        throw new Error(\"Unauthorized\")\r\n    }\r\n    if (res.status !== 200) {\r\n        throw new Error(\"Error! \" + res.status)\r\n    }\r\n    if (parseMethod === 'json'){\r\n        return res.json() as Promise<T>\r\n    } else {\r\n        return res.text() as unknown as Promise<T>\r\n    }\r\n}\r\n\r\nconst API = {\r\n    expenses: function (token: string | null, yearMonthObj: formStateType): Promise<{schema: { fields: [] }, data: tableDataEntry[]}> {\r\n        return fetch(`/api/expenses/${yearMonthObj.year}/${yearMonthObj.month}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res=>checkStatus<tableType>(res, 'json'))\r\n    },\r\n    postExpenses: function (token: string | null, data:expensesFormType): Promise<Response | string> {\r\n        return fetch(`/api/expenses/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res=>checkStatus<string>(res, 'text'))\r\n    },\r\n    postBatchExpenses: function (token: string | null, data:expensesFormType[]): Promise<Response | string> {\r\n        return fetch(`/api/expenses/batch`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res=>checkStatus<string>(res, 'text'))\r\n    },\r\n    postIncome: function (token: string | null, data:incomeFormType): Promise<Response | string> {\r\n        return fetch(`/api/income/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res=>checkStatus<string>(res, 'text'))\r\n    },\r\n    postBatchIncome: function (token: string | null, data:incomeFormType[]): Promise<Response | string> {\r\n        return fetch(`/api/income/batch`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res=>checkStatus<string>(res, 'text'))\r\n    },\r\n    deleteExpenses: function (token: string | null, id: number | undefined): Promise<Response | string> {\r\n        return fetch(`/api/expenses/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res=>checkStatus<string>(res, 'text'))\r\n    },\r\n    updateExpenses: function (token: string | null, data: tableDataEntry): Promise<Response | string> {\r\n        return fetch(`/api/expenses/${data.entry_id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res=>checkStatus<string>(res, 'text'))\r\n    },\r\n    income: function (token: string | null, yearMonthObj: formStateType): Promise<{schema: { fields: [] }, data: tableDataEntry[]}> {\r\n        return fetch(`/api/income/${yearMonthObj.year}/${yearMonthObj.month}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res=>checkStatus<tableType>(res, 'json'))\r\n    },\r\n    updateIncome: function (token: string | null, data: tableDataEntry): Promise<Response | string> {\r\n        return fetch(`/api/income/${data.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res=>checkStatus<string>(res, 'text'))\r\n    },\r\n    deleteIncome: function (token: string | null, id: number | undefined): Promise<Response | string> {\r\n        return fetch(`/api/income/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res=>checkStatus<string>(res, 'text'))\r\n    },\r\n    pivot: function (token: string | null, yearMonthObj: formStateType): Promise<{schema: { fields: [] }, data: tableDataEntry[]}> {\r\n        return fetch(`/api/expenses/pivot/${yearMonthObj.year}/${yearMonthObj.month}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res=>checkStatus<tableType>(res, 'json'))\r\n    },\r\n    dataList: function (token: string | null): Promise<allDataListsType> {\r\n        return fetch(`/api/datalists`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<allDataListsType>(res, 'json'))\r\n    },\r\n    login: function (data: { username: string, password: string }): Promise<{ token: string }> {\r\n        return fetch('/auth/login', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<{ token: string }>(res, 'json'))\r\n    },\r\n    checkAuth: function (token: string | null): Promise<{username: string, token: string}> {\r\n        return fetch(`/auth/checkAuth`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res =>checkStatus<{username: string, token: string}>(res, 'json'))\r\n    }\r\n}\r\n\r\nexport default API","import { openDB, deleteDB, DBSchema, IDBPDatabase } from 'idb'\nimport { expensesFormType, incomeFormType } from '../interfaces/Interfaces';\nimport API from './API';\n\ninterface financesDB extends DBSchema {\n  expenses: {\n    value: {\n      Amount: number,\n      Date: Date | null,\n      person_id: number,\n      vendor: string,\n      broad_category_id: number,\n      narrow_category_id: number,\n      notes: string\n    },\n    key: string\n  },\n  income: {\n    value: {\n      date: Date | null,\n      amount: number,\n      earner_id: number,\n      source: string,\n    },\n    key: string\n  }\n}\n\n\nlet db: IDBPDatabase<financesDB>;\nexport async function testDatabase() {\n  db = await openDB<financesDB>(\"pendingFinances\", 2, {\n    upgrade(db) {\n      db.createObjectStore('expenses', { autoIncrement: true })\n      db.createObjectStore('income', { autoIncrement: true })\n    }\n  });\n\n  if (navigator.onLine) {\n    checkDatabase();\n  }\n}\n\nexport async function saveRecord(table: 'income' | 'expenses', record: expensesFormType | incomeFormType) {\n  await db.put(table, record);\n}\n\nexport async function emptyDatabase() {\n  try {\n    await db.clear('expenses')\n    await db.clear('income')\n    return \"pendingFinances cleared!\"\n  } catch (err) {\n    return err\n  }\n}\n\nasync function checkDatabase() {\n  let token = localStorage.getItem('token')\n  try {\n    const pendingExpenses = await db.getAll(\"expenses\");\n    if (pendingExpenses.length > 0) {\n      await API.postBatchExpenses(token, pendingExpenses)\n      // delete records if successful\n      db.clear('expenses')\n    }\n    const pendingIncome = await db.getAll(\"income\");\n    if (pendingIncome.length > 0) {\n      await API.postBatchIncome(token, pendingIncome)\n      // delete records if successful\n      db.clear('income')\n    }\n  } catch (err) {\n    console.error(err)\n  }\n}\n\n// listen for app coming back online\nwindow.addEventListener(\"online\", checkDatabase);","import React, { useState } from 'react'\r\nimport API from '../utils/API'\r\nimport { saveRecord } from '../utils/db'\r\nimport { AuthContext } from '../App'\r\nimport type { expensesFormType, categoryType } from '../interfaces/Interfaces'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    InputAdornment,\r\n    Typography,\r\n    DialogContent\r\n} from '@material-ui/core';\r\n// import 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\n\r\n\r\nexport default function AddRecordsForm(props: {\r\n    classes: { root: string, formControl: string},\r\n    handleClose: Function\r\n}) {\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    const initialFormState = {\r\n        Date: new Date(Date.now()),\r\n        Amount: NaN,\r\n        person_id: NaN,\r\n        broad_category_id: NaN,\r\n        narrow_category_id: NaN,\r\n        vendor: \"\",\r\n        notes: \"\"\r\n    }\r\n\r\n    // Form control state\r\n    const [formState, setFormState] = useState<expensesFormType>(initialFormState)\r\n\r\n    // State to hold category info\r\n    const [currentCategory, setCurrentCategory] = useState<categoryType>({\r\n        name: \"\",\r\n        id: NaN,\r\n    })\r\n\r\n    // Hardcoding categories because the database is a mess...\r\n    const categories = [\r\n        {\r\n            name: \"Groceries\", id: 6, narrowCategories: [\r\n                { name: \"Food\", id: 10 },\r\n                { name: \"Alcohol\", id: 49 },\r\n                { name: \"Entertaining\", id: 7 }\r\n            ]\r\n        },\r\n        {\r\n            name: \"Health and Body\", id: 12, narrowCategories: [\r\n                { name: \"Toiletries\", id: 27 },\r\n                { name: \"Make-up\", id: 51 },\r\n                { name: \"Drugs/Supplements\", id: 273 },\r\n                { name: \"Doctors Visits\", id: 24 },\r\n                { name: \"Gym\", id: 34 },\r\n                { name: \"Essential Oils\", id: 58 },\r\n                { name: \"Massages/Body Care\", id: 41 }\r\n            ], person: true\r\n        },\r\n        {\r\n            name: \"Work\", id: 8, narrowCategories: [\r\n                { name: \"Road Food Out\", id: 20 },\r\n                { name: \"Road Groceries\", id: 37 },\r\n                { name: \"Road Coffee\", id: 21 },\r\n                { name: \"Business Food\", id: 70 },\r\n                { name: \"Scores\", id: 68 },\r\n                { name: \"Office Supplies\", id: 11 },\r\n                { name: \"Plane Tickets\", id: 18 },\r\n                { name: \"Transportation\", id: 9 },\r\n                { name: \"Union Dues\", id: 55 },\r\n                { name: \"Dry Cleaning\", id: 14 },\r\n                { name: \"Concert Tickets\", id: 655 },\r\n                { name: \"Lessons/Coachings\", id: 69 },\r\n                { name: \"Application fees\", id: 61 },\r\n                { name: \"Pianist Fees\", id: 656 }\r\n            ], person: true\r\n        },\r\n        {\r\n            name: \"Eating Out\", id: 3, narrowCategories: [\r\n                { name: \"Date\", id: 28 },\r\n                { name: \"Friends\", id: 3 },\r\n                { name: \"Snacks\", id: 17 },\r\n                { name: \"On the Run\", id: 8 },\r\n                { name: \"Coffee\", id: 30 },\r\n                { name: \"Ordering in\", id: 48 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Home Goods\", id: 9, narrowCategories: [\r\n                { name: \"Kitchen\", id: 12 },\r\n                { name: \"Decorating\", id: 29 },\r\n                { name: \"Furniture\", id: 16 },\r\n                { name: \"Paper Products/Cleaning\", id: 15 },\r\n                { name: \"Office Supplies\", id: 11 },\r\n                { name: \"Hobbies/Creative\", id: 23 },\r\n                { name: \"Linens\", id: 201 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"New York Home\", id: 1, narrowCategories: [\r\n                { name: \"Rent\", id: 40 },\r\n                { name: \"Internet\", id: 1 },\r\n                { name: \"Electricity\", id: 26 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Seattle Home\", id: 7, narrowCategories: [\r\n                { name: \"Mortgage\", id: 39 },\r\n                { name: \"HOA\", id: 38 },\r\n                { name: \"Taxes\", id: 657 },\r\n                { name: \"Internet\", id: 1 },\r\n                { name: \"Electricity\", id: 26 },\r\n                { name: \"Manager/Maintanence\", id: 42 },\r\n                { name: \"Insurance\", id: 134 },\r\n            ]\r\n        },\r\n        { name: \"Clothes\", id: 11, person: true },\r\n        {\r\n            name: \"Laundry\", id: 4, narrowCategories: [\r\n                { name: \"Laundry\", id: 4 },\r\n                { name: \"Dry Cleaning\", id: 14 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Entertainment\", id: 14, narrowCategories: [\r\n                { name: \"Live Shows\", id: 32 },\r\n                { name: \"Movies\", id: 44 },\r\n                { name: \"Museums\", id: 53 },\r\n                { name: \"Books\", id: 36 },\r\n                { name: \"Home (Netflix, Spotify, Amazon, Movie Rentals)\", id: 46 },\r\n                { name: \"Newspaper/Magazine\", id: 47 },\r\n            ]\r\n        },\r\n        { name: \"Philanthropy\", id: 17 },\r\n        {\r\n            name: \"Electronics\", id: 5, narrowCategories: [\r\n                { name: \"Phone Bill\", id: 33 },\r\n                { name: \"Computers\", id: 588 },\r\n                { name: \"Accessories\", id: 31 },\r\n                { name: \"Cloud Storage Fees\", id: 6 },\r\n            ]\r\n        },\r\n        { name: \"Gifts\", id: 13 },\r\n        {\r\n            name: \"Transportation\", id: 2, narrowCategories: [\r\n                { name: \"Gas\", id: 22 },\r\n                { name: \"Repairs\", id: 577 },\r\n                { name: \"Insurance\", id: 134 },\r\n                { name: \"Bike\", id: 567 },\r\n                { name: \"Subway\", id: 35 },\r\n                { name: \"Taxi/Lyft\", id: 5 },\r\n                { name: \"Car Rental\", id: 2 },\r\n                { name: \"Seattle Airplanes\", id: 276 },\r\n                { name: \"Parking\", id: 209 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Maggie\", id: 10, narrowCategories: [\r\n                { name: \"Food\", id: 10 },\r\n                { name: \"Litter\", id: 13 },\r\n                { name: \"Vet Bills\", id: 275 },\r\n                { name: \"Toys\", id: 60 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Travel/Leisure\", id: 16, narrowCategories: [\r\n                { name: \"Planes\", id: 62 },\r\n                { name: \"Ground Transportation\", id: 52 },\r\n                { name: \"Food\", id: 10 },\r\n                { name: \"Experiences\", id: 64 },\r\n                { name: \"Lodging\", id: 43 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Legal\", id: 19, narrowCategories: [\r\n                { name: \"Documents\", id: 202 },\r\n                { name: \"Services\", id: 63 },\r\n            ]\r\n        },\r\n        { name: \"Student Loans\", id: 15 },\r\n        { name: \"Education\", id: 18, person: true },\r\n        {\r\n            name: \"Theo\", id: 7, narrowCategories: [\r\n                { name: \"Baby sitting\", id: 274 },\r\n                { name: \"Toys\", id: 60 },\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const persons = [\r\n        { name: \"Alexa\", id: 3 },\r\n        { name: \"Eli\", id: 1 },\r\n        { name: \"Theo\", id: 2 }\r\n    ]\r\n\r\n    function handleFormChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }>): void {\r\n        let name = event.target.name as keyof typeof formState\r\n        setFormState({ ...formState, [name]: event.target.value })\r\n        if (name === 'broad_category_id') {\r\n            let category = categories.filter(i => i.id === event.target.value)[0]\r\n            setCurrentCategory(category)\r\n        }\r\n    }\r\n\r\n    function handleDateChange(date: Date | null) {\r\n        setFormState({ ...formState, Date: date });\r\n    };\r\n\r\n    async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\r\n        event.preventDefault()\r\n        if (!formState.Date || !formState.Amount || !formState.broad_category_id || !formState.vendor) {\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Please fill out all fields\",\r\n                open: true\r\n            })\r\n            return\r\n        }\r\n        let formStateConvertedDate: any = { ...formState }\r\n        formStateConvertedDate.Date = formStateConvertedDate.Date?.toLocaleDateString(\"en-US\")\r\n        try {\r\n            await API.postExpenses(Auth.token, formStateConvertedDate)\r\n            setAlertState({\r\n                severity: \"success\",\r\n                message: \"Record Saved!\",\r\n                open: true\r\n            })\r\n        } catch (err) {\r\n            if (err.message === \"Error! 500\") {\r\n                setAlertState({\r\n                    severity: \"error\",\r\n                    message: \"Server Error! Contact Eli\",\r\n                    open: true\r\n                })\r\n                return\r\n            } else {\r\n                saveRecord('expenses', formStateConvertedDate)\r\n                if (err.message === \"Unauthorized\") {\r\n                    setAuth({ type: 'LOGOUT' })\r\n                }\r\n                setAlertState({\r\n                    severity: \"warning\",\r\n                    message: \"Record Saved Locally\",\r\n                    open: true\r\n                })\r\n            }\r\n        } finally {\r\n            setFormState(initialFormState)\r\n            setCurrentCategory({\r\n                name: \"\",\r\n                id: NaN\r\n            })\r\n        }\r\n    }\r\n \r\n    return (\r\n            <DialogContent>\r\n            <Typography variant=\"h5\" component=\"h5\" className={props.classes.root}>Log Expense</Typography>\r\n            <form className={props.classes.root} onSubmit={handleFormSubmit}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        fullWidth\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        name=\"Date\"\r\n                        label=\"Date\"\r\n                        value={formState.Date}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}                        \r\n                        />\r\n                </MuiPickersUtilsProvider>\r\n                <TextField\r\n                    onChange={handleFormChange}\r\n                    value={formState.vendor}\r\n                    label=\"Vendor\"\r\n                    name=\"vendor\"\r\n                    type=\"string\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    />\r\n                <TextField\r\n                    onChange={handleFormChange}\r\n                    value={formState.Amount}\r\n                    label=\"Amount\"\r\n                    name=\"Amount\"\r\n                    type=\"number\"\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                    }}\r\n                    inputProps={{ step: \"0.01\" }}\r\n                    />\r\n                <FormControl\r\n                    className={props.classes.formControl}>\r\n                    <InputLabel htmlFor=\"broad_category\">Broad Category</InputLabel>\r\n                    <Select\r\n                        onChange={handleFormChange}\r\n                        value={formState.broad_category_id}\r\n                        name=\"broad_category_id\"\r\n                        labelId=\"broad_category\"\r\n                        label=\"Broad Category\"\r\n                        >\r\n                        {categories.map(i => (\r\n                            <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                            ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {currentCategory.narrowCategories ? (\r\n                    <FormControl className={props.classes.formControl}>\r\n                        <InputLabel htmlFor=\"narrow_category\">Narrow Category</InputLabel>\r\n                        <Select\r\n                            onChange={handleFormChange}\r\n                            value={formState.narrow_category_id}\r\n                            name=\"narrow_category_id\"\r\n                            labelId=\"narrow_category\"\r\n                            label=\"Narrow Category\"\r\n                            >\r\n                            {/* Get the list of narrow categories corresponding to the selected broad category */}\r\n                            {currentCategory.narrowCategories?.map(i => (\r\n                                <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                ) : null}\r\n                {currentCategory.person ? (\r\n                    \r\n                    <FormControl className={props.classes.formControl}>\r\n                        <InputLabel htmlFor=\"person_id\">Person</InputLabel>\r\n                        <Select\r\n                            onChange={handleFormChange}\r\n                            value={formState.person_id}\r\n                            name=\"person_id\"\r\n                            labelId=\"person_id\"\r\n                            label=\"Person\"\r\n                            >\r\n                            {persons.map(i => (\r\n                                <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                                ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                ) : null}\r\n                <TextField\r\n                    onChange={handleFormChange}\r\n                    value={formState.notes}\r\n                    label=\"Notes\"\r\n                    name=\"notes\"\r\n                    type=\"string\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    >Submit</Button>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        setFormState(initialFormState)\r\n                        props.handleClose()\r\n                    }\r\n                }\r\n                >Close</Button>\r\n            </form>\r\n                </DialogContent>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport API from '../utils/API'\r\nimport { AuthContext } from '../App'\r\nimport type { incomeFormType } from '../interfaces/Interfaces'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    InputAdornment,\r\n    Typography,\r\n    DialogContent\r\n} from '@material-ui/core';\r\n// import 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { saveRecord } from '../utils/db';\r\n\r\n\r\nexport default function AddRecordsForm(props: {\r\n    classes: { root: string, formControl: string, dialog: string },\r\n    handleClose: Function\r\n}) {\r\n\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    const initialFormState = {\r\n        date: new Date(Date.now()),\r\n        amount: NaN,\r\n        earner_id: NaN,\r\n        source: \"\",\r\n    }\r\n\r\n    // Form control state\r\n    const [formState, setFormState] = useState<incomeFormType>(initialFormState)\r\n\r\n    // Hard coded Ids\r\n    const earners = [\r\n        { name: \"Alexa\", id: 3 },\r\n        { name: \"Eli\", id: 1 },\r\n        { name: \"Rent\", id: 8 },\r\n        { name: \"Sales\", id: 10 },\r\n        { name: \"Gift\", id: 11 },\r\n    ]\r\n\r\n    function handleFormChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }>): void {\r\n        let name = event.target.name as keyof typeof formState\r\n        setFormState({ ...formState, [name]: event.target.value })\r\n    }\r\n\r\n    function handleDateChange(date: Date | null) {\r\n        setFormState({ ...formState, date: date });\r\n    };\r\n\r\n    async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\r\n        event.preventDefault()\r\n        if (!formState.date || !formState.amount || !formState.earner_id || !formState.source) {\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Please fill out all fields\",\r\n                open: true\r\n            })\r\n            return\r\n        }\r\n        let formStateConvertedDate: any = { ...formState }\r\n        try {\r\n            formStateConvertedDate.date = formStateConvertedDate.date?.toLocaleDateString(\"en-US\")\r\n            await API.postIncome(Auth.token, formStateConvertedDate)\r\n            setAlertState({\r\n                severity: \"success\",\r\n                message: \"Record Saved!\",\r\n                open: true\r\n            })\r\n        } catch (err) {\r\n            if (err.message === \"Error! 500\") {\r\n                setAlertState({\r\n                    severity: \"error\",\r\n                    message: \"Server Error! Contact Eli\",\r\n                    open: true\r\n                })\r\n                return\r\n            } else {\r\n                saveRecord('income', formStateConvertedDate)\r\n                setAlertState({\r\n                    severity: \"warning\",\r\n                    message: \"Record Saved Locally\",\r\n                    open: true\r\n                })\r\n                if (err.message === \"Unauthorized\") {\r\n                    setAuth({ type: 'LOGOUT' })\r\n                }\r\n            }\r\n        } finally {\r\n            setFormState(initialFormState)\r\n        }\r\n    }\r\n\r\n    return (\r\n            <DialogContent>\r\n                <Typography variant=\"h5\" component=\"h5\" className={props.classes.root}>Log Income</Typography>\r\n                <form className={props.classes.root} onSubmit={handleFormSubmit}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            name=\"Date\"\r\n                            label=\"Date\"\r\n                            value={formState.date}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <TextField\r\n                        onChange={handleFormChange}\r\n                        value={formState.source}\r\n                        label=\"Source\"\r\n                        name=\"source\"\r\n                        type=\"string\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <TextField\r\n                        onChange={handleFormChange}\r\n                        value={formState.amount}\r\n                        label=\"Amount\"\r\n                        name=\"amount\"\r\n                        type=\"number\"\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                        inputProps={{ step: \"0.01\" }}\r\n                    />\r\n                    <FormControl className={props.classes.formControl}>\r\n                        <InputLabel htmlFor=\"earner_id\">Person</InputLabel>\r\n                        <Select\r\n                            onChange={handleFormChange}\r\n                            value={formState.earner_id}\r\n                            name=\"earner_id\"\r\n                            labelId=\"earner_id\"\r\n                            label=\"Person\"\r\n                        >\r\n                            {earners.map(i => (\r\n                                <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >Submit</Button>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => {\r\n                            setFormState(initialFormState)\r\n                            props.handleClose()\r\n                        }}\r\n                    >Close</Button>\r\n                </form>\r\n            </DialogContent>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReportTable from '../components/Table';\r\nimport AddExpensesForm from '../components/AddExpensesForm'\r\nimport AddIncomeForm from '../components/AddIncomeForm'\r\nimport API from '../utils/API'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { AuthContext } from '../App'\r\nimport type {\r\n    tableDataEntry,\r\n    dataListStateType,\r\n    allDataListsType,\r\n    formStateType,\r\n    InputName\r\n} from '../interfaces/Interfaces'\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    Container,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Backdrop,\r\n    CircularProgress,\r\n    Card,\r\n    Dialog,\r\n    Box\r\n} from '@material-ui/core';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { emptyDatabase } from '../utils/db';\r\n\r\nfunction Home() {\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n    const [formState, setFormState] = useState<formStateType>(\r\n        {\r\n            form: \"expenses\",\r\n            year: new Date(Date.now()).getUTCFullYear(),\r\n            month: new Date(Date.now()).getUTCMonth() + 1\r\n        }\r\n    )\r\n\r\n    const [incomeTableState, setIncomeTableState] = useState<{ schema: { fields: [] }, data: tableDataEntry[] }>(\r\n        {\r\n            schema: { fields: [] },\r\n            data: [{\r\n                Amount: \"\",\r\n                Date: \"\",\r\n                Source: \"\",\r\n                Person: \"\",\r\n                id: NaN,\r\n                source_id: NaN,\r\n                earner_id: NaN\r\n            }]\r\n        }\r\n    )\r\n\r\n    const [expensesTableState, setExpensesTableState] = useState<{ schema: { fields: [] }, data: tableDataEntry[] }>(\r\n        {\r\n            schema: { fields: [] },\r\n            data: [{\r\n                Amount: \"\",\r\n                Date: \"\",\r\n                Source: \"\",\r\n                Vendor: \"\",\r\n                Broad_category: \"\",\r\n                Narrow_category: \"\",\r\n                Person: \"\",\r\n                Notes: \"\",\r\n                entry_id: NaN\r\n            }]\r\n        }\r\n\r\n    )\r\n    const [pivotTableState, setPivotTableState] = useState<{ schema: { fields: [] }, data: tableDataEntry[] }>(\r\n        {\r\n            schema: { fields: [] },\r\n            data: [{\r\n                Amount: \"\",\r\n                Broad_category: \"\",\r\n                Narrow_category: \"\"\r\n            }]\r\n        }\r\n    )\r\n\r\n    // State for datalists\r\n\r\n    const [dataListsState, setDataListsState] = useState<allDataListsType>({\r\n        source: [],\r\n        person_earner: [],\r\n        narrow_category: [],\r\n        broad_category: [],\r\n        vendor: []\r\n    })\r\n\r\n    // Loading Backdrop\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false);\r\n\r\n\r\n    function formatDates(entry: tableDataEntry): tableDataEntry {\r\n        if (!entry.Date) {\r\n            return entry\r\n        } else {\r\n            let date = new Date(entry.Date);\r\n            let year = date.getUTCFullYear();\r\n            let month = (1 + date.getUTCMonth()).toString();\r\n            month = month.length > 1 ? month : '0' + month;\r\n            let day = date.getUTCDate().toString();\r\n            day = day.length > 1 ? day : '0' + day;\r\n            let dateString = month + '/' + day + '/' + year;\r\n            entry.Date = dateString\r\n            return entry\r\n        }\r\n    }\r\n\r\n    function handleFormChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }> | React.ChangeEvent<HTMLSelectElement>): void {\r\n        let name = event.target.name as keyof typeof formState\r\n        setFormState({ ...formState, [name]: event.target.value })\r\n    }\r\n\r\n    async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\r\n        try {\r\n            event.preventDefault()\r\n            let route = formState.form\r\n            setOpenBackdrop(true)\r\n            let response = await API[route](Auth.token, formState)\r\n            setOpenBackdrop(false)\r\n            // Formatting the dates the hard way because javascript doesn't support strftime...\r\n            if (route !== 'pivot') {\r\n                response.data = response.data.map(formatDates)\r\n            }\r\n            switch (route) {\r\n                case \"expenses\":\r\n                    setExpensesTableState(response)\r\n                    break;\r\n                case \"income\":\r\n                    setIncomeTableState(response)\r\n                    break;\r\n                case \"pivot\":\r\n                    setPivotTableState(response)\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            if (err.message === \"Unauthorized\") {\r\n                setAuth({ type: 'LOGOUT' })\r\n            }\r\n            setOpenBackdrop(false)\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Error Fetching Data\",\r\n                open: true\r\n            })\r\n        }\r\n    }\r\n\r\n    function assignId(\r\n        name: InputName,\r\n        value: string) {\r\n\r\n        let state;\r\n        let id;\r\n\r\n        switch (name) {\r\n            case \"Person\":\r\n                state = dataListsState.person_earner;\r\n                id = 'person_id';\r\n                break;\r\n            case \"Source\":\r\n                state = dataListsState.source;\r\n                id = 'source_id';\r\n                break;\r\n            case \"Broad_category\":\r\n                state = dataListsState.broad_category;\r\n                id = 'broad_category_id';\r\n                break;\r\n            case \"Narrow_category\":\r\n                state = dataListsState.narrow_category;\r\n                id = 'narrow_category_id';\r\n                break;\r\n            case \"Vendor\":\r\n                state = dataListsState.vendor;\r\n                id = 'vendor_id';\r\n                break;\r\n        }\r\n        let dataListItem = state.filter((i: dataListStateType) => i.name === value)[0]\r\n        if (dataListItem) {\r\n            return { id: id, dataListItem: dataListItem }\r\n        } else {\r\n            return { id: null, dataListItem: null }\r\n        }\r\n    }\r\n\r\n    async function handleExpensesChange(event: React.ChangeEvent<HTMLInputElement>, index: number): Promise<void> {\r\n        try {\r\n            let { name, value } = event.target;\r\n            let newExpensesTableStateData: tableDataEntry[] = [...expensesTableState.data]\r\n            let updatedRow: tableDataEntry = { ...newExpensesTableStateData[index], [name]: value }\r\n            if (name === \"Person\" || name === \"Broad_category\" || name === \"Narrow_category\" || name === \"Vendor\") {\r\n                let { id, dataListItem } = assignId(name as InputName, value)\r\n                if (id && dataListItem) {\r\n                    updatedRow = { ...updatedRow, [id]: dataListItem.id }\r\n                }\r\n            }\r\n            newExpensesTableStateData[index] = updatedRow\r\n            setExpensesTableState({ ...expensesTableState, data: newExpensesTableStateData })\r\n\r\n        } catch (err) {\r\n            console.error(err)\r\n            if (err.message === \"Unauthorized\") {\r\n                setAuth({ type: 'LOGOUT' })\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleIncomeChange(event: React.ChangeEvent<HTMLInputElement>, index: number): Promise<void> {\r\n        try {\r\n            let { name, value } = event.target;\r\n            let newIncomeTableStateData: tableDataEntry[] = [...incomeTableState.data]\r\n            let updatedRow: tableDataEntry = { ...newIncomeTableStateData[index], [name]: value }\r\n            if (name === \"Person\" || name === \"Source\") {\r\n                let { id, dataListItem } = assignId(name as InputName, value)\r\n                if (id && dataListItem) {\r\n                    updatedRow = { ...updatedRow, [id]: dataListItem.id }\r\n                }\r\n            }\r\n            newIncomeTableStateData[index] = updatedRow\r\n            setIncomeTableState({ ...incomeTableState, data: newIncomeTableStateData })\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    async function updateExpensesRow(index: number): Promise<void> {\r\n        try {\r\n            await API.updateExpenses(Auth.token, expensesTableState.data[index])\r\n            setAlertState({\r\n                severity: \"success\",\r\n                message: \"Record updated!\",\r\n                open: true\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Error: Failed to save!\",\r\n                open: true\r\n            })\r\n        }\r\n    }\r\n\r\n    async function updateIncomeRow(index: number): Promise<void> {\r\n        try {\r\n            let res = await API.updateIncome(Auth.token, incomeTableState.data[index])\r\n            console.log(res)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async function deleteEntry(id: number | undefined) {\r\n        try {\r\n            if (formState.form === \"expenses\") {\r\n                await API.deleteExpenses(Auth.token, id);\r\n                let newExpensesTableStateData = expensesTableState.data.filter(entry => entry.entry_id !== id)\r\n                setExpensesTableState({ ...expensesTableState, data: newExpensesTableStateData })\r\n            } else if (formState.form === \"income\") {\r\n                await API.deleteIncome(Auth.token, id);\r\n                let newIncomeTableStateData = incomeTableState.data.filter(entry => entry.id !== id)\r\n                setIncomeTableState({ ...incomeTableState, data: newIncomeTableStateData })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n            if (err === 'Unauthorized') {\r\n                setAuth({ type: 'LOGOUT' })\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create classes to use for styling\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            formControl: {\r\n                margin: theme.spacing(1),\r\n                minWidth: '7em'\r\n            },\r\n            selectEmpty: {\r\n                marginTop: theme.spacing(2),\r\n            },\r\n            root: {\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap',\r\n                [theme.breakpoints.up('md')]: {\r\n                    flexWrap: 'noWrap',\r\n                },\r\n                '& > *': {\r\n                    margin: theme.spacing(1),\r\n                    [theme.breakpoints.down('xs')]: {\r\n                        width: '100%',\r\n                    },\r\n                },\r\n            },\r\n            wallchart: {\r\n                width: '100%'\r\n            },\r\n            logoutBtn: {\r\n                float: 'right',\r\n                margin: '1em',\r\n\r\n            },\r\n            offline: {\r\n                backgroundColor: 'red',\r\n                color: 'white',\r\n                textAlign: 'center',\r\n                position: 'sticky'\r\n            },\r\n            backdrop: {\r\n                zIndex: theme.zIndex.drawer + 1,\r\n                color: '#fff',\r\n            },\r\n            speedDial: {\r\n                position: 'fixed',\r\n                bottom: theme.spacing(2),\r\n                right: theme.spacing(2),\r\n            },\r\n            dialog: {\r\n                width: '100%'\r\n            },\r\n            datePicker: {\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginLeft: '-10px'\r\n                },\r\n            }\r\n        })\r\n    );\r\n    const classes = useStyles();\r\n\r\n    // SpeedDial actions\r\n    const actions = [\r\n        { icon: <AddIcon />, name: 'Expenses', action: handleExpensesOpen, operation: 'product' },\r\n        { icon: <AddIcon />, name: 'Income', action: handleIncomeOpen, operation: 'tag' }\r\n    ]\r\n\r\n    const [speedDialOpen, setSpeedDialOpen] = React.useState(false);\r\n\r\n    const handleSpeedDialClose = () => {\r\n        setSpeedDialOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setSpeedDialOpen(true);\r\n    };\r\n\r\n    function handleExpensesOpen(): void {\r\n        setAddExpensesOpen(true)\r\n        setSpeedDialOpen(false)\r\n    }\r\n\r\n    function handleIncomeOpen(): void {\r\n        setAddIncomeOpen(true)\r\n        setSpeedDialOpen(false)\r\n    }\r\n\r\n    // Controls for Dialogs\r\n    const [addExpensesOpen, setAddExpensesOpen] = useState(false)\r\n    const [addIncomeOpen, setAddIncomeOpen] = useState(false)\r\n    function handleClose() {\r\n        setAddExpensesOpen(false)\r\n        setAddIncomeOpen(false)\r\n    }\r\n\r\n    // Control display of Offline banner\r\n    const [offline, setOffline] = useState<boolean>(false)\r\n    window.addEventListener(\"offline\", () => setOffline(true))\r\n    window.addEventListener(\"online\", () => setOffline(false))\r\n\r\n    useEffect(() => {\r\n        async function getDataLists(): Promise<void> {\r\n            let datalists = await API.dataList(Auth.token)\r\n            setDataListsState(datalists)\r\n        }\r\n        getDataLists()\r\n        if (!navigator.onLine) {\r\n            setOffline(true)\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Box component='div' className=\"Home\">\r\n            {offline ? (\r\n                <AppBar className={classes.offline} position='sticky'>\r\n                    Offline\r\n                </AppBar>\r\n            ) : null}\r\n            <Box component='header' className=\"header\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.logoutBtn}\r\n                    onClick={async () => {\r\n                        setAuth({ type: 'LOGOUT' })\r\n                        let res = await emptyDatabase()\r\n                        console.log(res)\r\n                    }}\r\n                >Logout\r\n                </Button>\r\n                <Container className={classes.root}>\r\n                    <h1 style={{ textAlign: 'center' }}>{Auth.user} Finances</h1>\r\n                </Container>\r\n\r\n                <img src=\"/wallchart\" alt=\"Wall Chart\" className={classes.wallchart} />\r\n\r\n                <Dialog onClose={handleClose} open={addExpensesOpen} maxWidth='xl'>\r\n                    <AddExpensesForm classes={classes} handleClose={handleClose} />\r\n                </Dialog>\r\n                <Dialog onClose={handleClose} open={addIncomeOpen} maxWidth='xl'>\r\n                    <AddIncomeForm classes={classes} handleClose={handleClose} />\r\n                </Dialog>\r\n                <Container className={classes.root}>\r\n                    <Card variant=\"outlined\">\r\n                        <h2 className={classes.root}>Reports</h2>\r\n                        <form onSubmit={handleFormSubmit} className={classes.root}>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"form\">Report</InputLabel>\r\n                                <Select\r\n                                    name=\"form\"\r\n                                    label=\"Report\"\r\n                                    labelId=\"form\"\r\n                                    value={formState.form}\r\n                                    onChange={handleFormChange}>\r\n                                    <MenuItem value=\"income\">Income</MenuItem>\r\n                                    <MenuItem value=\"expenses\">Expenses</MenuItem>\r\n                                    <MenuItem value=\"pivot\">Pivot Table</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <TextField\r\n                                onChange={handleFormChange}\r\n                                value={formState.year}\r\n                                label=\"Year\"\r\n                                name=\"year\"\r\n                                type=\"number\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"month2\">Month</InputLabel>\r\n                                <Select\r\n                                    onChange={handleFormChange}\r\n                                    value={formState.month}\r\n                                    name=\"month\"\r\n                                    labelId=\"month2\"\r\n                                    label=\"Month\"\r\n                                >\r\n                                    <MenuItem value={1}>January</MenuItem>\r\n                                    <MenuItem value={2}>February</MenuItem>\r\n                                    <MenuItem value={3}>March</MenuItem>\r\n                                    <MenuItem value={4}>April</MenuItem>\r\n                                    <MenuItem value={5}>May</MenuItem>\r\n                                    <MenuItem value={6}>June</MenuItem>\r\n                                    <MenuItem value={7}>July</MenuItem>\r\n                                    <MenuItem value={8}>August</MenuItem>\r\n                                    <MenuItem value={9}>September</MenuItem>\r\n                                    <MenuItem value={10}>October</MenuItem>\r\n                                    <MenuItem value={11}>November</MenuItem>\r\n                                    <MenuItem value={12}>December</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >\r\n                                View\r\n                        </Button>\r\n                        </form>\r\n                    </Card>\r\n                </Container>\r\n            </Box >\r\n            <div className=\"body\">\r\n                {formState.form === \"income\" && incomeTableState.data[0]?.id ? (\r\n                    <ReportTable\r\n                        state={incomeTableState}\r\n                        dataLists={dataListsState}\r\n                        handleChange={handleIncomeChange}\r\n                        handleUpdate={updateIncomeRow}\r\n                        deleteEntry={deleteEntry}\r\n                        form={formState.form}\r\n                    />\r\n                ) : null}\r\n                {formState.form === \"expenses\" && expensesTableState.data[0]?.entry_id ? (\r\n                    <ReportTable\r\n                        state={expensesTableState}\r\n                        dataLists={dataListsState}\r\n                        handleChange={handleExpensesChange}\r\n                        handleUpdate={updateExpensesRow}\r\n                        deleteEntry={deleteEntry}\r\n                        form={formState.form}\r\n                    />\r\n                ) : null}\r\n                {formState.form === \"pivot\" && pivotTableState ? (\r\n                    <ReportTable\r\n                        state={pivotTableState}\r\n                        deleteEntry={() => null}\r\n                        handleUpdate={() => null}\r\n                        handleChange={() => null}\r\n                        form={formState.form}\r\n                    />\r\n                ) : null}\r\n            </div>\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial example\"\r\n                className={classes.speedDial}\r\n                // hidden={hidden}\r\n                icon={<SpeedDialIcon />}\r\n                onClose={handleSpeedDialClose}\r\n                onOpen={handleOpen}\r\n                open={speedDialOpen}\r\n                onMouseLeave={() => { }}\r\n            >\r\n                {actions.map((action) => (\r\n                    <SpeedDialAction\r\n                        key={action.name}\r\n                        icon={action.icon}\r\n                        tooltipTitle={action.name}\r\n                        tooltipOpen\r\n                        onClick={action.action}\r\n                    />\r\n                ))}\r\n            </SpeedDial>\r\n            <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                <CircularProgress disableShrink color=\"inherit\" />\r\n            </Backdrop>\r\n        </Box >\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport API from '../utils/API'\r\nimport { AuthContext } from '../App'\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexWrap: 'wrap',\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                [theme.breakpoints.down('xs')]: {\r\n                    width: '100%',\r\n                },\r\n            }\r\n        }\r\n    })\r\n);\r\n\r\nexport default function Login() {\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    const [loginFormState, setLoginFormState] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const inputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        setLoginFormState({\r\n            ...loginFormState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const formSubmit = async (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        try {\r\n            await API.login(loginFormState).then(newToken => {\r\n                setAuth({ type: 'LOGIN', payload: { user: loginFormState.username, token: newToken.token } })\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Incorrect username or password\",\r\n                open: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n\r\n    if (Auth.loggedIn) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Login\" style={{ textAlign: 'center' }}>\r\n                <h4>Login</h4>\r\n                <form className={classes.root} onSubmit={formSubmit}>\r\n                    <TextField\r\n                        onChange={inputChange}\r\n                        value={loginFormState.username}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        label=\"username\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        onChange={inputChange}\r\n                        value={loginFormState.password}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"password\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" name=\"login\" type=\"submit\">Login</Button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nexport default function Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from './Alert'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { alertStateType } from '../interfaces/Interfaces';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    snackbar: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSnackbar({ state, setState }: {\r\n    state: alertStateType,\r\n    setState: React.Dispatch<React.SetStateAction<alertStateType>>\r\n    }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setState({ ...state, open: false });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.snackbar}>\r\n            <Snackbar\r\n                open={state.open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n\r\n            >\r\n                <Alert onClose={handleClose} severity={state.severity}>\r\n                    {state.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState, useReducer } from 'react'\nimport { BrowserRouter as Router, Route, Redirect, RouteComponentProps } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Login from './pages/Login'\nimport API from './utils/API'\nimport { testDatabase } from './utils/db'\nimport './App.css';\nimport CustomizedSnackbar from './components/SnackBar'\nimport { alertStateType } from './interfaces/Interfaces'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { green, blueGrey, red } from '@material-ui/core/colors'\n\nimport { MuiPickersOverrides } from '@material-ui/pickers/typings/overrides';\nimport { CssBaseline, ThemeOptions } from '@material-ui/core'\n\n// Types to allow for theme customization\ntype overridesNameToClassKey = {\n  [P in keyof MuiPickersOverrides]: keyof MuiPickersOverrides[P];\n};\n\ntype CustomType = {\n  MuiPickersBasePicker: {\n    pickerView: {\n      maxWidth?: string;\n    };\n  };\n};\n\ndeclare module '@material-ui/core/styles/overrides' {\n  interface ComponentNameToClassKey extends overridesNameToClassKey { }\n  export interface ComponentNameToClassKey extends CustomType { }\n};\n\n// Instantiating default theme to use breakpoints\nconst defaultTheme = createMuiTheme();\n\n// Theme factory\nfunction createMyTheme(options: ThemeOptions) {\n  return createMuiTheme({\n    overrides: {\n      MuiPickersBasePicker: {\n        container: {\n          backgroundColor: blueGrey[900],\n          [defaultTheme.breakpoints.down(\"xs\")]: {\n          marginLeft: '-10px',\n          }\n        },\n      },\n      MuiCard: {\n        root: {\n          backgroundColor: blueGrey[900]\n        }\n      },\n      MuiDialogContent: {\n        root: {\n          backgroundColor: blueGrey[900]\n        }\n      },\n      MuiPickersCalendarHeader: {\n        iconButton: {\n          backgroundColor: blueGrey[900]\n        }\n      }\n    },\n    ...options\n  })\n};\n\nconst theme = createMyTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: blueGrey[900]\n    },\n    primary: {\n      main: green[900]\n    },\n    secondary: {\n      main: red[900]\n    }\n  },\n});\n\ninterface Auth {\n  loggedIn: boolean,\n  user: string,\n  token: string\n};\n\ninterface ContextState {\n  Auth: Auth,\n  setAuth: React.Dispatch<{ type: string; payload?: { user: string; token: string; } | undefined; }>,\n  setAlertState: React.Dispatch<React.SetStateAction<alertStateType>>\n};\n\n// Check if user is logged in before returning protected component/page\nconst ProtectedRoute = ({ component: Component, loggedIn, ...rest }: {\n  path: string,\n  loggedIn: boolean,\n  setLoggedIn: Function,\n  component: React.FunctionComponent<RouteComponentProps>,\n}): JSX.Element => (\n    <Route {...rest} render={props => (\n      loggedIn\n        ? <Component {...props} />\n        : <Redirect to='/login' />\n    )\n    } />\n\n  )\n\nexport const AuthContext = React.createContext<ContextState>({\n  Auth: {\n    loggedIn: false,\n    user: \"\",\n    token: \"\"\n  },\n  setAuth: (): void => { },\n  setAlertState: (): void => { }\n})\n\n\n\nexport default function App() {\n\n  const reducer = (state: Auth, action: { type: string, payload?: { user: string, token: string } }): Auth => {\n    if (action.type === 'LOGIN' && action.payload) {\n      localStorage.setItem(\"user\", action.payload.user);\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        loggedIn: true,\n        user: action.payload.user,\n        token: action.payload.token\n      };\n    } else if (action.type === 'LOGOUT') {\n      localStorage.clear();\n      return {\n        ...state,\n        loggedIn: false,\n        user: \"\",\n        token: \"\",\n      };\n    } else {\n      return state;\n    }\n  };\n\n  const [Auth, setAuth] = useReducer(reducer, {\n    loggedIn: false,\n    user: \"\",\n    token: \"\"\n  })\n\n  const [alertState, setAlertState] = useState<alertStateType>({\n    severity: undefined,\n    message: \"\",\n    open: false,\n  })\n\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    const user = localStorage.getItem(\"user\")\n    if (token) {\n      API.checkAuth(token)\n        .then(res => setAuth({ type: 'LOGIN', payload: { user: res.username, token: token } }))\n        .catch(err => {\n          if (err.message === \"Unauthorized\") {\n            setAuth({ type: 'LOGOUT' })\n          } else {\n            setAuth({ type: 'LOGIN', payload: { user: user || \"\", token: token || \"\" } })\n          }\n        })\n    }\n  }, [])\n\n\n  useEffect(() => {\n    testDatabase()\n  })\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AuthContext.Provider\n        value={{ Auth, setAuth, setAlertState }}\n      >\n\n        <Router>\n          <ProtectedRoute path=\"/\"\n            loggedIn={Auth.loggedIn}\n            setLoggedIn={setAuth}\n            // offline={offline}\n            component={Home}\n          />\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n        </Router>\n        <CustomizedSnackbar\n          state={alertState}\n          setState={setAlertState}\n        />\n      </AuthContext.Provider>\n    </ThemeProvider>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}