{"version":3,"sources":["components/InputRow.tsx","components/Table.tsx","utils/API.tsx","utils/db.tsx","components/AddExpensesForm.tsx","components/AddIncomeForm.tsx","components/PivotTable.tsx","components/Form.tsx","components/MyAppBar.tsx","pages/Home.tsx","pages/Login.tsx","components/Alert.tsx","components/SnackBar.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["StyledTableCell","withStyles","theme","createStyles","body","fontSize","padding","maxWidth","TableCell","StyledTableRow","root","backgroundColor","palette","background","default","blueGrey","paddingLeft","TableRow","InputRow","props","useState","Amount","NaN","state","setState","makeDataList","propsState","id","map","entry","value","name","handleInputRowChange","event","target","useEffect","fields","filter","column","includes","TextField","onBlur","e","handleChange","i","onChange","className","toFixed","inputProps","list","type","step","InputProps","startAdornment","InputAdornment","position","disableUnderline","style","width","dataLists","source","person_earner","narrow_category","broad_category","vendor","IconButton","color","onClick","handleUpdate","aria-label","deleteEntry","entry_id","ReportTable","head","primary","main","common","white","classes","makeStyles","table","minWidth","useStyles","myRef","createRef","current","scrollIntoView","behavior","TableContainer","component","Paper","Table","ref","TableHead","schema","key","entries","data","sortedEntries","sort","a","b","length","arraysEqual","setSortedBy","ascending","console","log","sortBy","cursor","replace","sortedBy","ArrowDropDown","marginBottom","ArrowDropUp","TableBody","checkStatus","res","parseMethod","status","Error","json","text","blob","db","API","expenses","token","yearMonthObj","fetch","year","month","headers","then","postExpenses","method","JSON","stringify","postBatchExpenses","search","postIncome","postBatchIncome","deleteExpenses","updateExpenses","income","updateIncome","deleteIncome","pivot","dataList","login","checkAuth","downloadFile","filename","start","end","url","window","URL","createObjectURL","document","createElement","href","download","appendChild","click","remove","openDB","upgrade","createObjectStore","autoIncrement","navigator","onLine","checkDatabase","saveRecord","record","put","clear","localStorage","getItem","getAll","pendingExpenses","pendingIncome","error","addEventListener","AddRecordsForm","React","useContext","AuthContext","Auth","setAuth","setAlertState","initialFormState","Date","now","person_id","broad_category_id","narrow_category_id","notes","formState","setFormState","currentCategory","setCurrentCategory","categories","narrowCategories","person","handleFormChange","category","preventDefault","severity","message","open","formStateConvertedDate","toLocaleDateString","setLoading","DialogContent","Typography","variant","onSubmit","utils","DateFnsUtils","disableToolbar","fullWidth","autoOk","format","margin","label","date","KeyboardButtonProps","InputLabelProps","shrink","FormControl","formControl","InputLabel","htmlFor","Select","labelId","MenuItem","Button","handleClose","amount","earner_id","DarkTableRow","LightTableRow","ExtraLightTableRow","PivotTable","show","setShow","pivotState","reduce","Broad_category","total","narrow_categories","Narrow_category","persons","Person","showState","Object","keys","bCat","newShow","toggleShowRow","ExpandLess","ExpandMore","nCat","Form","handleFormSubmit","Container","Card","form","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","borderRadius","shape","fade","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","isMenuOpen","Boolean","user","handleMenuClose","logout","emptyDatabase","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","AppBar","Toolbar","noWrap","InputBase","placeholder","input","aria-controls","aria-haspopup","currentTarget","Home","getUTCFullYear","getUTCMonth","Source","source_id","incomeTableState","setIncomeTableState","Vendor","Notes","expensesTableState","setExpensesTableState","searchTableState","setSearchTableState","dataListsState","setDataListsState","loading","formatDatesAndNumbers","toString","day","getUTCDate","dateString","route","response","assignId","dataListItem","handleExpensesChange","index","newExpensesTableStateData","updatedRow","err","newIncomeTableStateData","updateExpensesRow","selectEmpty","marginTop","flexWrap","down","wallchart","logoutBtn","float","downloadBtn","backdrop","zIndex","speedDial","bottom","right","dialog","datePicker","mobileTitle","speedDialOpen","setSpeedDialOpen","actions","icon","action","setAddExpensesOpen","operation","setAddIncomeOpen","addExpensesOpen","addIncomeOpen","datalists","getDataLists","Box","src","alt","Dialog","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","onMouseLeave","SpeedDialAction","tooltipTitle","tooltipOpen","Backdrop","CircularProgress","disableShrink","Login","username","password","loginFormState","setLoginFormState","inputChange","formSubmit","newToken","payload","loggedIn","to","textAlign","Alert","elevation","snackbar","CustomizedSnackbar","reason","Snackbar","autoHideDuration","defaultTheme","createMuiTheme","options","green","secondary","red","overrides","MuiPickersBasePicker","container","MuiCard","MuiDialogContent","MuiPickersCalendarHeader","iconButton","ProtectedRoute","Component","rest","render","createContext","App","useReducer","setItem","undefined","alertState","catch","testDatabase","ThemeProvider","CssBaseline","Provider","path","setLoggedIn","exact","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","process","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ba762989.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { DataListStateType, TableDataEntry, AllDataListsType } from '../interfaces/Interfaces'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { IconButton, TableCell, TableRow, TextField, InputAdornment } from '@material-ui/core'\r\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        body: {\r\n            fontSize: 14,\r\n            padding: 0,\r\n            maxWidth: '10ch',\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.background.default,\r\n            },\r\n            '&:nth-of-type(even)': {\r\n                backgroundColor: blueGrey[800],\r\n            },\r\n            '& input': {\r\n                backgroundColor: 'inherit',\r\n                paddingLeft: 0,\r\n            }\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nexport default function InputRow(props:\r\n    {\r\n        entry: TableDataEntry,\r\n        i: number,\r\n        fields: { name: string }[],\r\n        dataLists?: AllDataListsType\r\n        handleChange: Function,\r\n        handleUpdate: Function,\r\n        deleteEntry: Function\r\n    }) {\r\n\r\n    const [state, setState] = useState<TableDataEntry>({ Amount: NaN })\r\n\r\n    function makeDataList(propsState: DataListStateType[], id: string) {\r\n        return (\r\n            <datalist id={id}>\r\n                {propsState.map((entry: DataListStateType) => {\r\n                    return (\r\n                        <option\r\n                            value={entry.name}\r\n                            key={entry.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </datalist>\r\n        )\r\n    }\r\n\r\n    function handleInputRowChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        let { name, value } = event.target;\r\n        setState({ ...state, [name]: value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState(props.entry)\r\n    }, [props.entry])\r\n\r\n    return (\r\n        <StyledTableRow>\r\n            {props.fields\r\n                .filter(column => !column.name.includes(\"id\"))\r\n                .map(column => {\r\n                    \r\n                    return (\r\n                        <StyledTableCell\r\n\r\n                        >\r\n                            <TextField\r\n                                name={column.name}\r\n                                onBlur={(e: React.FocusEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n                                    props.handleChange(e, props.i)\r\n                                }}\r\n                                onChange={handleInputRowChange}\r\n                                className=\"tableInput\"\r\n                                value={column.name === 'Amount' ? state.Amount?.toFixed(2) || NaN : state[column.name as keyof TableDataEntry] || \"\"}\r\n                                inputProps={{\r\n                                    list: column.name,\r\n                                    type: column.name === 'Amount' ? 'number': 'text',\r\n                                    step: .01\r\n                                }}\r\n                                InputProps={\r\n                                     {\r\n                                    startAdornment: <InputAdornment position=\"start\">{column.name === 'Amount' ? \"$\" : null}</InputAdornment>,\r\n                                    disableUnderline: true\r\n                                }\r\n                                \r\n                            }\r\n                                style={{ width: '80%' }}\r\n                            />\r\n                            {column.name === 'Source' && props.dataLists?.source ? (\r\n                                makeDataList(props.dataLists?.source, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Person' && props.dataLists?.person_earner ? (\r\n                                makeDataList(props.dataLists?.person_earner, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Narrow_category' && props.dataLists?.narrow_category ? (\r\n                                makeDataList(props.dataLists?.narrow_category, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Broad_category' && props.dataLists?.broad_category ? (\r\n                                makeDataList(props.dataLists?.broad_category, column.name)\r\n                            ) : null}\r\n                            {column.name === 'Vendor' && props.dataLists?.vendor ? (\r\n                                makeDataList(props.dataLists?.vendor, column.name)\r\n                            ) : null}\r\n                        </StyledTableCell>\r\n                    )\r\n                })}\r\n            <StyledTableCell>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => props.handleUpdate(props.i)}\r\n                >\r\n                    <SaveIcon />\r\n                </IconButton>\r\n            </StyledTableCell>\r\n            <StyledTableCell>\r\n                <IconButton\r\n                    aria-label=\"delete\"\r\n                    color=\"secondary\"\r\n                    onClick={() => props.deleteEntry(state.entry_id || state.id)}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </StyledTableCell>\r\n        </StyledTableRow>\r\n    )\r\n}","import React, { useEffect, createRef } from \"react\";\r\nimport InputRow from \"./InputRow\";\r\nimport type {\r\n  TableDataEntry,\r\n  AllDataListsType,\r\n} from \"../interfaces/Interfaces\";\r\nimport { ArrowDropDown, ArrowDropUp } from \"@material-ui/icons\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  withStyles,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\n\r\nexport default function ReportTable(props: {\r\n  state: {\r\n    schema: {\r\n      fields: { name: keyof TableDataEntry }[];\r\n    };\r\n    data: TableDataEntry[];\r\n  };\r\n  setState: Function;\r\n  sortedBy: { column: keyof TableDataEntry; ascending: boolean };\r\n  setSortedBy: Function;\r\n  dataLists?: AllDataListsType;\r\n  handleChange: Function;\r\n  handleUpdate: Function;\r\n  deleteEntry: Function;\r\n  form?: string;\r\n}) {\r\n  const StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n      head: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n        padding: 10,\r\n        fontSize: 16,\r\n      },\r\n    })\r\n  )(TableCell);\r\n\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      table: {\r\n        minWidth: 650,\r\n      },\r\n    })\r\n  );\r\n  const classes = useStyles();\r\n\r\n  // Component scrolls into view on mount\r\n  const myRef = createRef<HTMLTableElement>();\r\n  const executeScroll = () => {\r\n    if (myRef.current) {\r\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  // Helper function for sortBy\r\n  function arraysEqual(a: TableDataEntry[], b: TableDataEntry[]): boolean {\r\n    for (let i = 0; i < a.length; ++i) {\r\n      if (a[i] !== b[i]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // Function to sort table by\r\n  function sortBy(key: keyof TableDataEntry) {\r\n    let entries = [...props.state.data];\r\n    let sortedEntries = entries.sort((a, b) => (a[key]! >= b[key]! ? 1 : -1)); // \"!\" tells Typescript \"I promise this won't be null or undefined\"\r\n    // If the array is already sorted ascending, sort it descending\r\n    if (arraysEqual(sortedEntries, props.state.data)) {\r\n      sortedEntries = entries.sort((a, b) => (a[key]! <= b[key]! ? 1 : -1));\r\n      props.setSortedBy({ column: key, ascending: false });\r\n    } else {\r\n      props.setSortedBy({ column: key, ascending: true });\r\n    }\r\n    console.log(sortedEntries);\r\n    props.setState({ ...props.state, data: sortedEntries });\r\n  }\r\n\r\n  useEffect(() => {\r\n    executeScroll();\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} ref={myRef}>\r\n        <TableHead>\r\n          <TableRow>\r\n            {props.state.schema.fields\r\n              .filter((column) => !column.name.includes(\"id\"))\r\n              .map((column) => {\r\n                return (\r\n                  <StyledTableCell\r\n                    key={column.name}\r\n                    onClick={() => sortBy(column.name)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    {column.name.replace(\"_\", \" \")} \r\n                    {props.sortedBy.column === column.name\r\n                      ? props.sortedBy.ascending\r\n                        ? <ArrowDropDown style={{marginBottom: \"-7px\"}}/>\r\n                        : <ArrowDropUp style={{marginBottom: \"-7px\"}}/>\r\n                      : null}\r\n                  </StyledTableCell>\r\n                );\r\n              })}\r\n            <StyledTableCell>\r\n              <span>Save</span>\r\n            </StyledTableCell>\r\n            <StyledTableCell>\r\n              <span>Delete</span>\r\n            </StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className=\"tableBody\">\r\n          {props.state.data.map((entry: TableDataEntry, i: number) => (\r\n            <InputRow\r\n              entry={entry}\r\n              i={i}\r\n              key={i}\r\n              fields={props.state.schema.fields}\r\n              handleChange={props.handleChange}\r\n              handleUpdate={props.handleUpdate}\r\n              dataLists={props.dataLists}\r\n              deleteEntry={props.deleteEntry}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import type {\r\n    AllDataListsType,\r\n    FormStateType,\r\n    TableDataEntry,\r\n    TableType,\r\n    ExpensesFormType,\r\n    IncomeFormType\r\n} from '../interfaces/Interfaces'\r\n\r\n\r\nfunction checkStatus<T>(res: Response, parseMethod: string): Promise<T> {\r\n    if (res.status === 401) {\r\n        throw new Error(\"Unauthorized\")\r\n    }\r\n    if (res.status !== 200) {\r\n        throw new Error(\"Error! \" + res.status)\r\n    }\r\n    if (parseMethod === 'json') {\r\n        return res.json() as Promise<T>\r\n    } else if (parseMethod === 'text') {\r\n        return res.text() as unknown as Promise<T>\r\n    } else {\r\n        return res.blob() as unknown as Promise<T>\r\n    }\r\n}\r\n\r\nconst API = {\r\n    expenses: function (token: string | null, yearMonthObj: FormStateType): Promise<{ schema: { fields: [] }, data: TableDataEntry[] }> {\r\n        return fetch(`/api/expenses/${yearMonthObj.year}/${yearMonthObj.month}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<TableType>(res, 'json'))\r\n    },\r\n    postExpenses: function (token: string | null, data: ExpensesFormType): Promise<Response | string> {\r\n        return fetch(`/api/expenses/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    postBatchExpenses: function (token: string | null, data: ExpensesFormType[]): Promise<Response | string> {\r\n        return fetch(`/api/expenses/batch`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    search: function (token: string | null, {search}: FormStateType): Promise<{ schema: { fields: [] }, data: TableDataEntry[] }> {\r\n        return fetch(`/api/expenses/search/${search}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<TableType>(res, 'json'))\r\n    },\r\n    postIncome: function (token: string | null, data: IncomeFormType): Promise<Response | string> {\r\n        return fetch(`/api/income/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    postBatchIncome: function (token: string | null, data: IncomeFormType[]): Promise<Response | string> {\r\n        return fetch(`/api/income/batch`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    deleteExpenses: function (token: string | null, id: number | undefined): Promise<Response | string> {\r\n        return fetch(`/api/expenses/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    updateExpenses: function (token: string | null, data: TableDataEntry): Promise<Response | string> {\r\n        return fetch(`/api/expenses/${data.entry_id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    income: function (token: string | null, yearMonthObj: FormStateType): Promise<{ schema: { fields: [] }, data: TableDataEntry[] }> {\r\n        return fetch(`/api/income/${yearMonthObj.year}/${yearMonthObj.month}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<TableType>(res, 'json'))\r\n    },\r\n    updateIncome: function (token: string | null, data: TableDataEntry): Promise<Response | string> {\r\n        return fetch(`/api/income/${data.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    deleteIncome: function (token: string | null, id: number | undefined): Promise<Response | string> {\r\n        return fetch(`/api/income/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<string>(res, 'text'))\r\n    },\r\n    pivot: function (token: string | null, yearMonthObj: FormStateType): Promise<{ schema: { fields: [] }, data: TableDataEntry[] }> {\r\n        return fetch(`/api/expenses/${yearMonthObj.year}/${yearMonthObj.month}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<TableType>(res, 'json'))\r\n    },\r\n    dataList: function (token: string | null): Promise<AllDataListsType> {\r\n        return fetch(`/api/datalists`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<AllDataListsType>(res, 'json'))\r\n    },\r\n    login: function (data: { username: string, password: string }): Promise<{ token: string }> {\r\n        return fetch('/auth/login', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => checkStatus<{ token: string }>(res, 'json'))\r\n    },\r\n    checkAuth: function (token: string | null): Promise<{ username: string, token: string }> {\r\n        return fetch(`/auth/checkAuth`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<{ username: string, token: string }>(res, 'json'))\r\n    },\r\n    downloadFile: function (token: string | null, filename: string, start: string, end: string): void {\r\n        fetch(`/api/expenses/file/${start}/${end}`, {\r\n            headers: {\r\n                \"authorization\": `Bearer ${token}`\r\n            }\r\n        }).then(res => checkStatus<Blob>(res, 'blob'))\r\n            .then(blob => {\r\n                var url = window.URL.createObjectURL(blob);\r\n                var a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = filename;\r\n                document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\r\n                a.click();\r\n                a.remove();  //afterwards we remove the element again         \r\n            });\r\n    }\r\n}\r\n\r\nexport default API\r\n\r\n","import { openDB, DBSchema, IDBPDatabase } from 'idb'\nimport { ExpensesFormType, IncomeFormType } from '../interfaces/Interfaces';\nimport API from './API';\n\ninterface financesDB extends DBSchema {\n  expenses: {\n    value: {\n      Amount: number,\n      Date: Date | null,\n      person_id: number,\n      vendor: string,\n      broad_category_id: number,\n      narrow_category_id: number,\n      notes: string\n    },\n    key: string\n  },\n  income: {\n    value: {\n      date: Date | null,\n      amount: number,\n      earner_id: number,\n      source: string,\n    },\n    key: string\n  }\n}\n\n\nlet db: IDBPDatabase<financesDB>;\nexport async function testDatabase() {\n  db = await openDB<financesDB>(\"pendingFinances\", 2, {\n    upgrade(db) {\n      db.createObjectStore('expenses', { autoIncrement: true })\n      db.createObjectStore('income', { autoIncrement: true })\n    }\n  });\n\n  if (navigator.onLine) {\n    checkDatabase();\n  }\n}\n\nexport async function saveRecord(table: 'income' | 'expenses', record: ExpensesFormType | IncomeFormType) {\n  await db.put(table, record);\n}\n\nexport async function emptyDatabase() {\n  try {\n    await db.clear('expenses')\n    await db.clear('income')\n    return \"pendingFinances cleared!\"\n  } catch (err) {\n    return err\n  }\n}\n\nasync function checkDatabase() {\n  let token = localStorage.getItem('token')\n  try {\n    const pendingExpenses = await db.getAll(\"expenses\");\n    if (pendingExpenses.length > 0) {\n      await API.postBatchExpenses(token, pendingExpenses)\n      // delete records if successful\n      db.clear('expenses')\n    }\n    const pendingIncome = await db.getAll(\"income\");\n    if (pendingIncome.length > 0) {\n      await API.postBatchIncome(token, pendingIncome)\n      // delete records if successful\n      db.clear('income')\n    }\n  } catch (err) {\n    console.error(err)\n  }\n}\n\n// listen for app coming back online\nwindow.addEventListener(\"online\", checkDatabase);","import React, { useState } from 'react'\r\nimport API from '../utils/API'\r\nimport { saveRecord } from '../utils/db'\r\nimport { AuthContext } from '../App'\r\nimport type { ExpensesFormType, CategoryType } from '../interfaces/Interfaces'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    InputAdornment,\r\n    Typography,\r\n    DialogContent\r\n} from '@material-ui/core';\r\n// import 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\n\r\n\r\nexport default function AddRecordsForm(props: {\r\n    classes: { root: string, formControl: string},\r\n    handleClose: Function,\r\n    setLoading: Function\r\n}) {\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    const initialFormState = {\r\n        Date: new Date(Date.now()),\r\n        Amount: NaN,\r\n        person_id: NaN,\r\n        broad_category_id: NaN,\r\n        narrow_category_id: NaN,\r\n        vendor: \"\",\r\n        notes: \"\"\r\n    }\r\n\r\n    // Form control state\r\n    const [formState, setFormState] = useState<ExpensesFormType>(initialFormState)\r\n\r\n    // State to hold category info\r\n    const [currentCategory, setCurrentCategory] = useState<CategoryType>({\r\n        name: \"\",\r\n        id: NaN,\r\n    })\r\n\r\n    // Hardcoding categories because the database is a mess...\r\n    const categories = [\r\n        {\r\n            name: \"Groceries\", id: 6, narrowCategories: [\r\n                { name: \"Food\", id: 10 },\r\n                { name: \"Alcohol\", id: 49 },\r\n                { name: \"Entertaining\", id: 7 }\r\n            ]\r\n        },\r\n        {\r\n            name: \"Health and Body\", id: 12, narrowCategories: [\r\n                { name: \"Toiletries\", id: 27 },\r\n                { name: \"Make-up\", id: 51 },\r\n                { name: \"Drugs/Supplements\", id: 273 },\r\n                { name: \"Doctors Visits\", id: 24 },\r\n                { name: \"Gym\", id: 34 },\r\n                { name: \"Essential Oils\", id: 58 },\r\n                { name: \"Massages/Body Care\", id: 41 }\r\n            ], person: true\r\n        },\r\n        {\r\n            name: \"Work\", id: 8, narrowCategories: [\r\n                { name: \"Road Food Out\", id: 20 },\r\n                { name: \"Road Groceries\", id: 37 },\r\n                { name: \"Road Coffee\", id: 21 },\r\n                { name: \"Business Food\", id: 70 },\r\n                { name: \"Scores\", id: 68 },\r\n                { name: \"Office Supplies\", id: 11 },\r\n                { name: \"Plane Tickets\", id: 18 },\r\n                { name: \"Transportation\", id: 9 },\r\n                { name: \"Union Dues\", id: 55 },\r\n                { name: \"Dry Cleaning\", id: 14 },\r\n                { name: \"Concert Tickets\", id: 655 },\r\n                { name: \"Lessons/Coachings\", id: 69 },\r\n                { name: \"Application fees\", id: 61 },\r\n                { name: \"Pianist Fees\", id: 656 }\r\n            ], person: true\r\n        },\r\n        {\r\n            name: \"Eating Out\", id: 3, narrowCategories: [\r\n                { name: \"Date\", id: 28 },\r\n                { name: \"Friends\", id: 3 },\r\n                { name: \"Snacks\", id: 17 },\r\n                { name: \"On the Run\", id: 8 },\r\n                { name: \"Coffee\", id: 30 },\r\n                { name: \"Ordering in\", id: 48 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Home Goods\", id: 9, narrowCategories: [\r\n                { name: \"Kitchen\", id: 12 },\r\n                { name: \"Decorating\", id: 29 },\r\n                { name: \"Furniture\", id: 16 },\r\n                { name: \"Paper Products/Cleaning\", id: 15 },\r\n                { name: \"Office Supplies\", id: 11 },\r\n                { name: \"Hobbies/Creative\", id: 23 },\r\n                { name: \"Linens\", id: 201 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"New York Home\", id: 1, narrowCategories: [\r\n                { name: \"Rent\", id: 40 },\r\n                { name: \"Internet\", id: 1 },\r\n                { name: \"Electricity\", id: 26 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Seattle Home\", id: 7, narrowCategories: [\r\n                { name: \"Mortgage\", id: 39 },\r\n                { name: \"HOA\", id: 38 },\r\n                { name: \"Taxes\", id: 657 },\r\n                { name: \"Internet\", id: 1 },\r\n                { name: \"Electricity\", id: 26 },\r\n                { name: \"Manager/Maintanence\", id: 42 },\r\n                { name: \"Insurance\", id: 134 },\r\n            ]\r\n        },\r\n        { name: \"Clothes\", id: 11, person: true },\r\n        {\r\n            name: \"Laundry\", id: 4, narrowCategories: [\r\n                { name: \"Laundry\", id: 4 },\r\n                { name: \"Dry Cleaning\", id: 14 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Entertainment\", id: 14, narrowCategories: [\r\n                { name: \"Live Shows\", id: 32 },\r\n                { name: \"Movies\", id: 44 },\r\n                { name: \"Museums\", id: 53 },\r\n                { name: \"Books\", id: 36 },\r\n                { name: \"Home (Netflix, Spotify, Amazon, Movie Rentals)\", id: 46 },\r\n                { name: \"Newspaper/Magazine\", id: 47 },\r\n            ]\r\n        },\r\n        { name: \"Philanthropy\", id: 17 },\r\n        {\r\n            name: \"Electronics\", id: 5, narrowCategories: [\r\n                { name: \"Phone Bill\", id: 33 },\r\n                { name: \"Computers\", id: 588 },\r\n                { name: \"Accessories\", id: 31 },\r\n                { name: \"Cloud Storage Fees\", id: 6 },\r\n            ]\r\n        },\r\n        { name: \"Gifts\", id: 13 },\r\n        {\r\n            name: \"Transportation\", id: 2, narrowCategories: [\r\n                { name: \"Gas\", id: 22 },\r\n                { name: \"Repairs\", id: 577 },\r\n                { name: \"Insurance\", id: 134 },\r\n                { name: \"Bike\", id: 567 },\r\n                { name: \"Subway\", id: 35 },\r\n                { name: \"Taxi/Lyft\", id: 5 },\r\n                { name: \"Car Rental\", id: 2 },\r\n                { name: \"Seattle Airplanes\", id: 276 },\r\n                { name: \"Parking\", id: 209 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Maggie\", id: 10, narrowCategories: [\r\n                { name: \"Food\", id: 10 },\r\n                { name: \"Litter\", id: 13 },\r\n                { name: \"Vet Bills\", id: 275 },\r\n                { name: \"Toys\", id: 60 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Travel/Leisure\", id: 16, narrowCategories: [\r\n                { name: \"Planes\", id: 62 },\r\n                { name: \"Ground Transportation\", id: 52 },\r\n                { name: \"Food\", id: 10 },\r\n                { name: \"Experiences\", id: 64 },\r\n                { name: \"Lodging\", id: 43 },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Legal\", id: 19, narrowCategories: [\r\n                { name: \"Documents\", id: 202 },\r\n                { name: \"Services\", id: 63 },\r\n            ]\r\n        },\r\n        { name: \"Student Loans\", id: 15 },\r\n        { name: \"Education\", id: 18, person: true },\r\n        {\r\n            name: \"Theo\", id: 75, narrowCategories: [\r\n                { name: \"Baby sitting\", id: 274 },\r\n                { name: \"Toys\", id: 60 },\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const persons = [\r\n        { name: \"Alexa\", id: 3 },\r\n        { name: \"Eli\", id: 1 },\r\n        { name: \"Theo\", id: 2 }\r\n    ]\r\n\r\n    function handleFormChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }>): void {\r\n        let name = event.target.name as keyof typeof formState\r\n        setFormState({ ...formState, [name]: event.target.value })\r\n        if (name === 'broad_category_id') {\r\n            let category = categories.filter(i => i.id === event.target.value)[0]\r\n            setCurrentCategory(category)\r\n        }\r\n    }\r\n\r\n    function handleDateChange(date: Date | null) {\r\n        setFormState({ ...formState, Date: date });\r\n    };\r\n\r\n    async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\r\n        event.preventDefault()\r\n        if (!formState.Date || !formState.Amount || !formState.broad_category_id || !formState.vendor) {\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Please fill out all fields\",\r\n                open: true\r\n            })\r\n            return\r\n        }\r\n        let formStateConvertedDate: any = { ...formState }\r\n        formStateConvertedDate.Date = formStateConvertedDate.Date?.toLocaleDateString(\"en-US\")\r\n        try {\r\n            props.setLoading(true)\r\n            await API.postExpenses(Auth.token, formStateConvertedDate)\r\n            props.setLoading(false)\r\n            setAlertState({\r\n                severity: \"success\",\r\n                message: \"Record Saved!\",\r\n                open: true\r\n            })\r\n        } catch (err) {\r\n            props.setLoading(false)\r\n            if (err.message === \"Error! 500\") {\r\n                setAlertState({\r\n                    severity: \"error\",\r\n                    message: \"Server Error! Contact Eli\",\r\n                    open: true\r\n                })\r\n                return\r\n            } else {\r\n                saveRecord('expenses', formStateConvertedDate)\r\n                if (err.message === \"Unauthorized\") {\r\n                    setAuth({ type: 'LOGOUT' })\r\n                }\r\n                setAlertState({\r\n                    severity: \"warning\",\r\n                    message: \"Record Saved Locally\",\r\n                    open: true\r\n                })\r\n            }\r\n        } finally {\r\n            setFormState(initialFormState)\r\n            setCurrentCategory({\r\n                name: \"\",\r\n                id: NaN\r\n            })\r\n        }\r\n    }\r\n \r\n    return (\r\n            <DialogContent>\r\n            <Typography variant=\"h5\" component=\"h5\" className={props.classes.root}>Log Expense</Typography>\r\n            <form className={props.classes.root} onSubmit={handleFormSubmit}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        fullWidth\r\n                        autoOk={true}\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        name=\"Date\"\r\n                        label=\"Date\"\r\n                        value={formState.Date}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}                        \r\n                        />\r\n                </MuiPickersUtilsProvider>\r\n                <TextField\r\n                    onChange={handleFormChange}\r\n                    value={formState.vendor}\r\n                    label=\"Vendor\"\r\n                    name=\"vendor\"\r\n                    type=\"string\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    />\r\n                <TextField\r\n                    onChange={handleFormChange}\r\n                    value={formState.Amount}\r\n                    label=\"Amount\"\r\n                    name=\"Amount\"\r\n                    type=\"number\"\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                    }}\r\n                    inputProps={{ step: \"0.01\" }}\r\n                    />\r\n                <FormControl\r\n                    className={props.classes.formControl}>\r\n                    <InputLabel htmlFor=\"broad_category\">Broad Category</InputLabel>\r\n                    <Select\r\n                        onChange={handleFormChange}\r\n                        value={formState.broad_category_id}\r\n                        name=\"broad_category_id\"\r\n                        labelId=\"broad_category\"\r\n                        label=\"Broad Category\"\r\n                        >\r\n                        {categories.map(i => (\r\n                            <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                            ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {currentCategory.narrowCategories ? (\r\n                    <FormControl className={props.classes.formControl}>\r\n                        <InputLabel htmlFor=\"narrow_category\">Narrow Category</InputLabel>\r\n                        <Select\r\n                            onChange={handleFormChange}\r\n                            value={formState.narrow_category_id}\r\n                            name=\"narrow_category_id\"\r\n                            labelId=\"narrow_category\"\r\n                            label=\"Narrow Category\"\r\n                            >\r\n                            {/* Get the list of narrow categories corresponding to the selected broad category */}\r\n                            {currentCategory.narrowCategories?.map(i => (\r\n                                <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                ) : null}\r\n                {currentCategory.person ? (\r\n                    \r\n                    <FormControl className={props.classes.formControl}>\r\n                        <InputLabel htmlFor=\"person_id\">Person</InputLabel>\r\n                        <Select\r\n                            onChange={handleFormChange}\r\n                            value={formState.person_id}\r\n                            name=\"person_id\"\r\n                            labelId=\"person_id\"\r\n                            label=\"Person\"\r\n                            >\r\n                            {persons.map(i => (\r\n                                <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                                ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                ) : null}\r\n                <TextField\r\n                    onChange={handleFormChange}\r\n                    value={formState.notes}\r\n                    label=\"Notes\"\r\n                    name=\"notes\"\r\n                    type=\"string\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    >Submit</Button>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        setFormState(initialFormState)\r\n                        props.handleClose()\r\n                    }\r\n                }\r\n                >Close</Button>\r\n            </form>\r\n                </DialogContent>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport API from '../utils/API'\r\nimport { AuthContext } from '../App'\r\nimport type { IncomeFormType } from '../interfaces/Interfaces'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    InputAdornment,\r\n    Typography,\r\n    DialogContent\r\n} from '@material-ui/core';\r\n// import 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { saveRecord } from '../utils/db';\r\n\r\n\r\nexport default function AddRecordsForm(props: {\r\n    classes: { root: string, formControl: string, dialog: string },\r\n    handleClose: Function,\r\n    setLoading: Function\r\n}) {\r\n\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    const initialFormState = {\r\n        date: new Date(Date.now()),\r\n        amount: NaN,\r\n        earner_id: NaN,\r\n        source: \"\",\r\n    }\r\n\r\n    // Form control state\r\n    const [formState, setFormState] = useState<IncomeFormType>(initialFormState)\r\n\r\n    // Hard coded Ids\r\n    const earners = [\r\n        { name: \"Alexa\", id: 3 },\r\n        { name: \"Eli\", id: 1 },\r\n        { name: \"Rent\", id: 8 },\r\n        { name: \"Sales\", id: 10 },\r\n        { name: \"Gift\", id: 11 },\r\n    ]\r\n\r\n    function handleFormChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }>): void {\r\n        let name = event.target.name as keyof typeof formState\r\n        setFormState({ ...formState, [name]: event.target.value })\r\n    }\r\n\r\n    function handleDateChange(date: Date | null) {\r\n        setFormState({ ...formState, date: date });\r\n    };\r\n\r\n    async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\r\n        event.preventDefault()\r\n        if (!formState.date || !formState.amount || !formState.earner_id || !formState.source) {\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Please fill out all fields\",\r\n                open: true\r\n            })\r\n            return\r\n        }\r\n        let formStateConvertedDate: any = { ...formState }\r\n        try {\r\n            formStateConvertedDate.date = formStateConvertedDate.date?.toLocaleDateString(\"en-US\")\r\n            props.setLoading(true)\r\n            await API.postIncome(Auth.token, formStateConvertedDate)\r\n            props.setLoading(false)\r\n            setAlertState({\r\n                severity: \"success\",\r\n                message: \"Record Saved!\",\r\n                open: true\r\n            })\r\n        } catch (err) {\r\n            props.setLoading(false)\r\n            if (err.message === \"Error! 500\") {\r\n                setAlertState({\r\n                    severity: \"error\",\r\n                    message: \"Server Error! Contact Eli\",\r\n                    open: true\r\n                })\r\n                return\r\n            } else {\r\n                saveRecord('income', formStateConvertedDate)\r\n                setAlertState({\r\n                    severity: \"warning\",\r\n                    message: \"Record Saved Locally\",\r\n                    open: true\r\n                })\r\n                if (err.message === \"Unauthorized\") {\r\n                    setAuth({ type: 'LOGOUT' })\r\n                }\r\n            }\r\n        } finally {\r\n            setFormState(initialFormState)\r\n        }\r\n    }\r\n\r\n    return (\r\n            <DialogContent>\r\n                <Typography variant=\"h5\" component=\"h5\" className={props.classes.root}>Log Income</Typography>\r\n                <form className={props.classes.root} onSubmit={handleFormSubmit}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            autoOk={true}\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            name=\"Date\"\r\n                            label=\"Date\"\r\n                            value={formState.date}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <TextField\r\n                        onChange={handleFormChange}\r\n                        value={formState.source}\r\n                        label=\"Source\"\r\n                        name=\"source\"\r\n                        type=\"string\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                    />\r\n                    <TextField\r\n                        onChange={handleFormChange}\r\n                        value={formState.amount}\r\n                        label=\"Amount\"\r\n                        name=\"amount\"\r\n                        type=\"number\"\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                        inputProps={{ step: \"0.01\" }}\r\n                    />\r\n                    <FormControl className={props.classes.formControl}>\r\n                        <InputLabel htmlFor=\"earner_id\">Person</InputLabel>\r\n                        <Select\r\n                            onChange={handleFormChange}\r\n                            value={formState.earner_id}\r\n                            name=\"earner_id\"\r\n                            labelId=\"earner_id\"\r\n                            label=\"Person\"\r\n                        >\r\n                            {earners.map(i => (\r\n                                <MenuItem value={i.id}>{i.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >Submit</Button>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => {\r\n                            setFormState(initialFormState)\r\n                            props.handleClose()\r\n                        }}\r\n                    >Close</Button>\r\n                </form>\r\n            </DialogContent>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Paper, Table, TableBody, TableContainer, TableCell, TableRow, TableHead } from '@material-ui/core';\r\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport {ExpandLess, ExpandMore} from '@material-ui/icons';\r\nimport { TableDataEntry } from '../interfaces/Interfaces';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\n// import StaticRow from './StaticRow';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: theme.palette.common.white,\r\n            padding: 10,\r\n            fontSize: 16\r\n        },\r\n        body: {\r\n            padding: 10,\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst DarkTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.default,\r\n            cursor: 'pointer'\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nconst LightTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: blueGrey[800],\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nconst ExtraLightTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: blueGrey[700],\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nexport default function PivotTable(props: {\r\n    state:\r\n    {\r\n        schema:\r\n        {\r\n            fields: { name: string }[]\r\n        },\r\n        data: TableDataEntry[]\r\n\r\n    },\r\n}) {\r\n\r\n    const [show, setShow] = useState<boolean[]>([false])\r\n\r\n    function toggleShowRow(i: number) {\r\n        let newShow = [...show]\r\n        newShow[i] = !newShow[i]\r\n        setShow(newShow)\r\n    }\r\n\r\n    const pivotState = props.state.data.reduce((a, b) => {\r\n        if (b.Broad_category) {\r\n            if (a[b.Broad_category]) {\r\n                a[b.Broad_category].total += b.Amount;\r\n            } else {\r\n                a[b.Broad_category] = { total: b.Amount, narrow_categories: {} };\r\n            }\r\n            if (b.Narrow_category) {\r\n                if (a[b.Broad_category].narrow_categories[b.Narrow_category]) {\r\n                    a[b.Broad_category].narrow_categories[b.Narrow_category].total += b.Amount;\r\n                } else {\r\n                    a[b.Broad_category].narrow_categories[b.Narrow_category] = {total: b.Amount, persons: {}}   ;\r\n                }\r\n                if (b.Person) {\r\n                    if (a[b.Broad_category].narrow_categories[b.Narrow_category].persons[b.Person]) {\r\n                        a[b.Broad_category].narrow_categories[b.Narrow_category].persons[b.Person] += b.Amount;\r\n                    } else {\r\n                        a[b.Broad_category].narrow_categories[b.Narrow_category].persons[b.Person] = b.Amount;\r\n                    }\r\n                }\r\n            } else if (b.Person) {\r\n                if (a[b.Broad_category].narrow_categories[\"--\"]?.persons[b.Person]) {\r\n                    a[b.Broad_category].narrow_categories[\"--\"].persons[b.Person] += b.Amount;\r\n                    a[b.Broad_category].narrow_categories[\"--\"].total += b.Amount;\r\n                } else {\r\n                a[b.Broad_category].narrow_categories = {...a[b.Broad_category].narrow_categories, \"--\": {persons: {[b.Person]: b.Amount}, total: b.Amount}}\r\n                }\r\n            }\r\n        }\r\n        return a\r\n    }, {} as any)\r\n\r\n    console.log(pivotState)\r\n\r\n    useEffect(() => {\r\n        let showState = Object.keys(pivotState).map((i: any) => false)\r\n        setShow(showState)\r\n    }, [props])\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>\r\n                            Broad category\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            Narrow Category\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            Person\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            Amount\r\n                        </StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {Object.keys(pivotState).map((bCat, i) => (\r\n                        <>\r\n                            <DarkTableRow key={i} onClick={() => toggleShowRow(i)}>\r\n                                <StyledTableCell>\r\n                                    {bCat}\r\n                                    {show[i] ? <ExpandLess style={{marginBottom: \"-7px\"}}/> : <ExpandMore style={{marginBottom: \"-7px\"}}/>}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    {/* Empty Cell */}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    {/* Empty Cell */}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    ${pivotState[bCat].total.toFixed(2)}\r\n                                </StyledTableCell>\r\n                            </DarkTableRow>\r\n                            {pivotState[bCat].narrow_categories && show[i] ? (\r\n                                Object.keys(pivotState[bCat].narrow_categories).map(nCat => (\r\n                                    <>\r\n                                        <LightTableRow>\r\n                                            <StyledTableCell>\r\n                                                {/* Empty Cell */}\r\n                                            </StyledTableCell>\r\n                                            <StyledTableCell>\r\n                                                {nCat}\r\n                                            </StyledTableCell>\r\n                                            <StyledTableCell>\r\n                                                {/* Empty Cell */}\r\n                                            </StyledTableCell>\r\n                                            <StyledTableCell>\r\n                                                ${pivotState[bCat].narrow_categories[nCat].total.toFixed(2)}\r\n                                            </StyledTableCell>\r\n                                        </LightTableRow>\r\n                                        {pivotState[bCat].narrow_categories[nCat].persons ? (\r\n                                            Object.keys(pivotState[bCat].narrow_categories[nCat].persons).map((person: string) => (\r\n                                                <ExtraLightTableRow>\r\n                                                    <StyledTableCell>\r\n                                                    </StyledTableCell>\r\n                                                    <StyledTableCell>\r\n                                                    </StyledTableCell>\r\n                                                    <StyledTableCell>\r\n                                                        {person}\r\n                                                    </StyledTableCell>\r\n                                                    <StyledTableCell>\r\n                                                        ${pivotState[bCat].narrow_categories[nCat].persons[person].toFixed(2)}\r\n\r\n                                                    </StyledTableCell>\r\n                                                </ExtraLightTableRow>\r\n                                            ))\r\n                                            ) : null\r\n                                        }\r\n                                    </>\r\n                                ))\r\n                            ) : null}\r\n                        </>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import React from 'react'\r\nimport {\r\n    Container,\r\n    Card,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n    MenuItem,\r\n    Button\r\n} from '@material-ui/core'\r\nimport { FormStateType } from '../interfaces/Interfaces'\r\n\r\nexport default function Form({\r\n    classes,\r\n    handleFormSubmit,\r\n    handleFormChange,\r\n    formState }: {\r\n        classes: {\r\n            root: string,\r\n            formControl: string\r\n        },\r\n        handleFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void,\r\n        handleFormChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }> | React.ChangeEvent<HTMLSelectElement>) => void,\r\n        formState: FormStateType\r\n    }) {\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Card variant=\"outlined\">\r\n                <form onSubmit={handleFormSubmit} className={classes.root}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel htmlFor=\"form\">Report</InputLabel>\r\n                        <Select\r\n                            name=\"form\"\r\n                            label=\"Report\"\r\n                            labelId=\"form\"\r\n                            value={formState.form}\r\n                            onChange={handleFormChange}>\r\n                            <MenuItem value=\"expenses\">Expenses</MenuItem>\r\n                            <MenuItem value=\"income\">Income</MenuItem>\r\n                            <MenuItem value=\"pivot\">Pivot Table</MenuItem>\r\n                            <MenuItem value=\"search\">Search</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    {formState.form === \"search\" ? (\r\n                        <>\r\n                            <TextField\r\n                                onChange={handleFormChange}\r\n                                value={formState.search}\r\n                                label=\"Search\"\r\n                                name=\"search\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                            <>\r\n                                <TextField\r\n                                    onChange={handleFormChange}\r\n                                    value={formState.year}\r\n                                    label=\"Year\"\r\n                                    name=\"year\"\r\n                                    type=\"number\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel htmlFor=\"month2\">Month</InputLabel>\r\n                                    <Select\r\n                                        onChange={handleFormChange}\r\n                                        value={formState.month}\r\n                                        name=\"month\"\r\n                                        labelId=\"month2\"\r\n                                        label=\"Month\"\r\n                                    >\r\n                                        <MenuItem value={1}>January</MenuItem>\r\n                                        <MenuItem value={2}>February</MenuItem>\r\n                                        <MenuItem value={3}>March</MenuItem>\r\n                                        <MenuItem value={4}>April</MenuItem>\r\n                                        <MenuItem value={5}>May</MenuItem>\r\n                                        <MenuItem value={6}>June</MenuItem>\r\n                                        <MenuItem value={7}>July</MenuItem>\r\n                                        <MenuItem value={8}>August</MenuItem>\r\n                                        <MenuItem value={9}>September</MenuItem>\r\n                                        <MenuItem value={10}>October</MenuItem>\r\n                                        <MenuItem value={11}>November</MenuItem>\r\n                                        <MenuItem value={12}>December</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </>\r\n                        )}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        View\r\n                        </Button>\r\n                </form>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { AuthContext } from '../App'\r\nimport { emptyDatabase } from '../utils/db';\r\nimport API from '../utils/API'\r\nimport { FormStateType } from '../interfaces/Interfaces';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        title: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginRight: theme.spacing(1),\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(3),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: '20ch',\r\n            },\r\n        },\r\n        sectionDesktop: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'flex',\r\n            },\r\n        },\r\n        sectionMobile: {\r\n            display: 'flex',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function PrimarySearchAppBar({ handleFormChange, handleFormSubmit, formState }: {\r\n    handleFormChange: (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void,\r\n    handleFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void,\r\n    formState: FormStateType\r\n}) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const { Auth, setAuth } = React.useContext(AuthContext)\r\n\r\n    function downloadFile(): void {\r\n        API.downloadFile(Auth.token, `${Auth.user}_expenses.xlsx`, \"2020-01-01\", \"2020-12-31\")\r\n        handleMenuClose()\r\n    }\r\n\r\n    function logout(): void {\r\n        setAuth({ type: 'LOGOUT' })\r\n        emptyDatabase()\r\n    }\r\n\r\n    const handleMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={downloadFile}>Downloads</MenuItem>\r\n            <MenuItem onClick={logout}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Finances\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <form\r\n                            onSubmit={handleFormSubmit}\r\n                        >\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                                name=\"search\"\r\n                                value={formState.search}\r\n                                onChange={handleFormChange}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                        <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n\r\n                    <Button\r\n                        color=\"inherit\"\r\n                        onClick={downloadFile}\r\n                        // edge=\"end\"\r\n                        >Download\r\n                    </Button>\r\n                    <Button\r\n                        color=\"inherit\"\r\n                        onClick={logout}\r\n                        // edge=\"end\"\r\n                        >Logout\r\n                    </Button>\r\n                        </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport ReportTable from \"../components/Table\";\r\nimport AddExpensesForm from \"../components/AddExpensesForm\";\r\nimport AddIncomeForm from \"../components/AddIncomeForm\";\r\nimport API from \"../utils/API\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AuthContext } from \"../App\";\r\nimport type {\r\n  TableDataEntry,\r\n  DataListStateType,\r\n  AllDataListsType,\r\n  FormStateType,\r\n  InputName,\r\n} from \"../interfaces/Interfaces\";\r\nimport {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Dialog,\r\n  Box,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PivotTable from \"../components/PivotTable\";\r\nimport Form from \"../components/Form\";\r\nimport MyAppBar from \"../components/MyAppBar\";\r\n\r\nfunction Home() {\r\n  const { Auth, setAuth, setAlertState } = React.useContext(AuthContext);\r\n\r\n  // Form control state\r\n  const [formState, setFormState] = useState<FormStateType>({\r\n    form: \"expenses\",\r\n    year: new Date(Date.now()).getUTCFullYear(),\r\n    month: new Date(Date.now()).getUTCMonth() + 1,\r\n    search: \"\",\r\n  });\r\n\r\n  const [incomeTableState, setIncomeTableState] = useState<{\r\n    schema: { fields: [] };\r\n    data: TableDataEntry[];\r\n  }>({\r\n    schema: { fields: [] },\r\n    data: [\r\n      {\r\n        Amount: NaN,\r\n        Date: \"\",\r\n        Source: \"\",\r\n        Person: \"\",\r\n        id: NaN,\r\n        source_id: NaN,\r\n        earner_id: NaN,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [expensesTableState, setExpensesTableState] = useState<{\r\n    schema: { fields: [] };\r\n    data: TableDataEntry[];\r\n  }>({\r\n    schema: { fields: [] },\r\n    data: [\r\n      {\r\n        Amount: NaN,\r\n        Date: \"\",\r\n        Source: \"\",\r\n        Vendor: \"\",\r\n        Broad_category: \"\",\r\n        Narrow_category: \"\",\r\n        Person: \"\",\r\n        Notes: \"\",\r\n        entry_id: NaN,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [searchTableState, setSearchTableState] = useState<{\r\n    schema: { fields: [] };\r\n    data: TableDataEntry[];\r\n  }>({\r\n    schema: { fields: [] },\r\n    data: [\r\n      {\r\n        Amount: NaN,\r\n        Date: \"\",\r\n        Source: \"\",\r\n        Vendor: \"\",\r\n        Broad_category: \"\",\r\n        Narrow_category: \"\",\r\n        Person: \"\",\r\n        Notes: \"\",\r\n        entry_id: NaN,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [searchFormState, setSearchFormState] = useState<string>(\"\");\r\n\r\n  // State for datalists\r\n  const [dataListsState, setDataListsState] = useState<AllDataListsType>({\r\n    source: [],\r\n    person_earner: [],\r\n    narrow_category: [],\r\n    broad_category: [],\r\n    vendor: [],\r\n  });\r\n\r\n  // Loading Backdrop display state\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // State for displaying which column the table is sorted by\r\n  const [sortedBy, setSortedBy] = useState<{\r\n    column: keyof TableDataEntry;\r\n    ascending: boolean;\r\n  }>({ column: \"Date\", ascending: true });\r\n\r\n  // Converts dates to human-readable format\r\n  function formatDatesAndNumbers(entry: TableDataEntry): TableDataEntry {\r\n    if (!entry.Date) {\r\n      return entry;\r\n    } else {\r\n      let date = new Date(entry.Date);\r\n      let year = date.getUTCFullYear();\r\n      let month = (1 + date.getUTCMonth()).toString();\r\n      month = month.length > 1 ? month : \"0\" + month;\r\n      let day = date.getUTCDate().toString();\r\n      day = day.length > 1 ? day : \"0\" + day;\r\n      let dateString = month + \"/\" + day + \"/\" + year;\r\n      entry.Date = dateString;\r\n      return entry;\r\n    }\r\n  }\r\n\r\n  // Form control\r\n  function handleFormChange(\r\n    event:\r\n      | React.ChangeEvent<\r\n          | HTMLInputElement\r\n          | HTMLTextAreaElement\r\n          | { name?: string; value: unknown }\r\n        >\r\n      | React.ChangeEvent<HTMLSelectElement>\r\n  ): void {\r\n    let name = event.target.name as keyof typeof formState;\r\n    setFormState({ ...formState, [name]: event.target.value });\r\n  }\r\n\r\n  async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\r\n    try {\r\n      event.preventDefault();\r\n      let route = formState.form;\r\n      setLoading(true);\r\n      let response = await API[route](Auth.token, formState);\r\n      setLoading(false);\r\n      // Formatting the dates the hard way because javascript doesn't support strftime...\r\n      if (route !== \"pivot\") {\r\n        response.data = response.data.map(formatDatesAndNumbers);\r\n      }\r\n      switch (route) {\r\n        case \"expenses\":\r\n          setExpensesTableState(response);\r\n          break;\r\n        case \"income\":\r\n          setIncomeTableState(response);\r\n          break;\r\n        case \"pivot\":\r\n          setExpensesTableState(response);\r\n          break;\r\n        case \"search\":\r\n          setSearchTableState(response);\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      if (err.message === \"Unauthorized\") {\r\n        setAuth({ type: \"LOGOUT\" });\r\n      }\r\n      setLoading(false);\r\n      setAlertState({\r\n        severity: \"error\",\r\n        message: \"Error Fetching Data\",\r\n        open: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Helper function for assigning an id to a TableDataEntry if user input matches an existing record\r\n  function assignId(name: InputName, value: string) {\r\n    let state;\r\n    let id;\r\n\r\n    switch (name) {\r\n      case \"Person\":\r\n        state = dataListsState.person_earner;\r\n        id = \"person_id\";\r\n        break;\r\n      case \"Source\":\r\n        state = dataListsState.source;\r\n        id = \"source_id\";\r\n        break;\r\n      case \"Broad_category\":\r\n        state = dataListsState.broad_category;\r\n        id = \"broad_category_id\";\r\n        break;\r\n      case \"Narrow_category\":\r\n        state = dataListsState.narrow_category;\r\n        id = \"narrow_category_id\";\r\n        break;\r\n      case \"Vendor\":\r\n        state = dataListsState.vendor;\r\n        id = \"vendor_id\";\r\n        break;\r\n    }\r\n    let dataListItem = state.filter(\r\n      (i: DataListStateType) => i.name === value\r\n    )[0];\r\n    if (dataListItem) {\r\n      return { id: id, dataListItem: dataListItem };\r\n    } else {\r\n      return { id: null, dataListItem: null };\r\n    }\r\n  }\r\n\r\n  // Keep global state synced with InputRow state\r\n  async function handleExpensesChange(\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    index: number\r\n  ): Promise<void> {\r\n    try {\r\n      let { name, value } = event.target;\r\n      let newExpensesTableStateData: TableDataEntry[] = [\r\n        ...expensesTableState.data,\r\n      ];\r\n      let updatedRow: TableDataEntry = {\r\n        ...newExpensesTableStateData[index],\r\n        [name]: value,\r\n      };\r\n      if (\r\n        name === \"Person\" ||\r\n        name === \"Broad_category\" ||\r\n        name === \"Narrow_category\" ||\r\n        name === \"Vendor\"\r\n      ) {\r\n        let { id, dataListItem } = assignId(name as InputName, value);\r\n        if (id && dataListItem) {\r\n          updatedRow = { ...updatedRow, [id]: dataListItem.id };\r\n        }\r\n      }\r\n      newExpensesTableStateData[index] = updatedRow;\r\n      setExpensesTableState({\r\n        ...expensesTableState,\r\n        data: newExpensesTableStateData,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      if (err.message === \"Unauthorized\") {\r\n        setAuth({ type: \"LOGOUT\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  // Keep global state synced with InputRow state\r\n  async function handleIncomeChange(\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    index: number\r\n  ): Promise<void> {\r\n    try {\r\n      let { name, value } = event.target;\r\n      let newIncomeTableStateData: TableDataEntry[] = [\r\n        ...incomeTableState.data,\r\n      ];\r\n      let updatedRow: TableDataEntry = {\r\n        ...newIncomeTableStateData[index],\r\n        [name]: value,\r\n      };\r\n      if (name === \"Person\" || name === \"Source\") {\r\n        let { id, dataListItem } = assignId(name as InputName, value);\r\n        if (id && dataListItem) {\r\n          updatedRow = { ...updatedRow, [id]: dataListItem.id };\r\n        }\r\n      }\r\n      newIncomeTableStateData[index] = updatedRow;\r\n      setIncomeTableState({\r\n        ...incomeTableState,\r\n        data: newIncomeTableStateData,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  // Update an row altered by the user\r\n  async function updateExpensesRow(index: number): Promise<void> {\r\n    try {\r\n      await API.updateExpenses(Auth.token, expensesTableState.data[index]);\r\n      setAlertState({\r\n        severity: \"success\",\r\n        message: \"Record updated!\",\r\n        open: true,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      setAlertState({\r\n        severity: \"error\",\r\n        message: \"Error: Failed to save!\",\r\n        open: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Update an row altered by the user\r\n  async function updateIncomeRow(index: number): Promise<void> {\r\n    try {\r\n      await API.updateIncome(Auth.token, incomeTableState.data[index]);\r\n      setAlertState({\r\n        severity: \"success\",\r\n        message: \"Record updated!\",\r\n        open: true,\r\n      });\r\n    } catch (err) {\r\n      setAlertState({\r\n        severity: \"error\",\r\n        message: \"Error: Failed to save!\",\r\n        open: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Delete a row from the database\r\n  async function deleteEntry(id: number | undefined) {\r\n    try {\r\n      if (formState.form === \"expenses\") {\r\n        await API.deleteExpenses(Auth.token, id);\r\n        let newExpensesTableStateData = expensesTableState.data.filter(\r\n          (entry) => entry.entry_id !== id\r\n        );\r\n        setExpensesTableState({\r\n          ...expensesTableState,\r\n          data: newExpensesTableStateData,\r\n        });\r\n      } else if (formState.form === \"income\") {\r\n        await API.deleteIncome(Auth.token, id);\r\n        let newIncomeTableStateData = incomeTableState.data.filter(\r\n          (entry) => entry.id !== id\r\n        );\r\n        setIncomeTableState({\r\n          ...incomeTableState,\r\n          data: newIncomeTableStateData,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      if (err === \"Unauthorized\") {\r\n        setAuth({ type: \"LOGOUT\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  // Create classes to use for styling\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: \"7em\",\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n          flexWrap: \"noWrap\",\r\n        },\r\n        \"& > *\": {\r\n          margin: theme.spacing(1),\r\n          [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"100%\",\r\n          },\r\n        },\r\n      },\r\n      wallchart: {\r\n        width: \"100%\",\r\n      },\r\n      logoutBtn: {\r\n        float: \"right\",\r\n        margin: \"1em\",\r\n      },\r\n      downloadBtn: {\r\n        float: \"left\",\r\n        margin: \"1em\",\r\n      },\r\n      backdrop: {\r\n        zIndex: 1301, // To be in front of Dialog at 1300\r\n        color: \"#fff\",\r\n      },\r\n      speedDial: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n      },\r\n      dialog: {\r\n        width: \"100%\",\r\n      },\r\n      datePicker: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n          marginLeft: \"-10px\",\r\n        },\r\n      },\r\n      mobileTitle: {\r\n        display: \"none\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n          display: \"flex\",\r\n        },\r\n        justifyContent: \"center\",\r\n      },\r\n    })\r\n  );\r\n  const classes = useStyles();\r\n\r\n  // SpeedDial controls\r\n  const [speedDialOpen, setSpeedDialOpen] = React.useState(false);\r\n\r\n  const actions = [\r\n    {\r\n      icon: <AddIcon />,\r\n      name: \"Expenses\",\r\n      action: handleExpensesOpen,\r\n      operation: \"product\",\r\n    },\r\n    {\r\n      icon: <AddIcon />,\r\n      name: \"Income\",\r\n      action: handleIncomeOpen,\r\n      operation: \"tag\",\r\n    },\r\n  ];\r\n\r\n  const handleSpeedDialClose = () => {\r\n    setSpeedDialOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setSpeedDialOpen(true);\r\n  };\r\n\r\n  function handleExpensesOpen(): void {\r\n    setAddExpensesOpen(true);\r\n    setSpeedDialOpen(false);\r\n  }\r\n\r\n  function handleIncomeOpen(): void {\r\n    setAddIncomeOpen(true);\r\n    setSpeedDialOpen(false);\r\n  }\r\n\r\n  // Controls for Dialogs\r\n  const [addExpensesOpen, setAddExpensesOpen] = useState(false);\r\n  const [addIncomeOpen, setAddIncomeOpen] = useState(false);\r\n  function handleClose() {\r\n    setAddExpensesOpen(false);\r\n    setAddIncomeOpen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getDataLists(): Promise<void> {\r\n      let datalists = await API.dataList(Auth.token);\r\n      setDataListsState(datalists);\r\n    }\r\n    getDataLists();\r\n  }, []);\r\n\r\n  return (\r\n    <Box component=\"div\" className=\"Home\">\r\n      <MyAppBar\r\n        handleFormChange={handleFormChange}\r\n        handleFormSubmit={handleFormSubmit}\r\n        formState={formState}\r\n      />\r\n      <Box component=\"header\" className=\"header\">\r\n        <Typography className={classes.mobileTitle} variant=\"h6\" noWrap>\r\n          Finances\r\n        </Typography>\r\n        <img src=\"/wallchart\" alt=\"Wall Chart\" className={classes.wallchart} />\r\n        <Form\r\n          classes={classes}\r\n          handleFormSubmit={handleFormSubmit}\r\n          handleFormChange={handleFormChange}\r\n          formState={formState}\r\n        />\r\n      </Box>\r\n      <div className=\"body\">\r\n        {formState.form === \"income\" && incomeTableState.data[0]?.id ? (\r\n          <ReportTable\r\n            state={incomeTableState}\r\n            setState={setIncomeTableState}\r\n            sortedBy={sortedBy}\r\n            setSortedBy={setSortedBy}\r\n            dataLists={dataListsState}\r\n            handleChange={handleIncomeChange}\r\n            handleUpdate={updateIncomeRow}\r\n            deleteEntry={deleteEntry}\r\n            form={formState.form}\r\n          />\r\n        ) : null}\r\n        {formState.form === \"expenses\" &&\r\n        expensesTableState.data[0]?.entry_id ? (\r\n          <ReportTable\r\n            state={expensesTableState}\r\n            setState={setExpensesTableState}\r\n            sortedBy={sortedBy}\r\n            setSortedBy={setSortedBy}\r\n            dataLists={dataListsState}\r\n            handleChange={handleExpensesChange}\r\n            handleUpdate={updateExpensesRow}\r\n            deleteEntry={deleteEntry}\r\n            form={formState.form}\r\n          />\r\n        ) : null}\r\n        {formState.form === \"search\" && searchTableState.data[0]?.entry_id ? (\r\n          <ReportTable\r\n            state={searchTableState}\r\n            setState={() => {}}\r\n            sortedBy={sortedBy}\r\n            setSortedBy={setSortedBy}\r\n            dataLists={dataListsState}\r\n            handleChange={handleExpensesChange}\r\n            handleUpdate={updateExpensesRow}\r\n            deleteEntry={deleteEntry}\r\n            form={formState.form}\r\n          />\r\n        ) : null}\r\n        {formState.form === \"pivot\" && expensesTableState.data[0]?.entry_id ? (\r\n          <PivotTable state={expensesTableState} />\r\n        ) : null}\r\n      </div>\r\n      <Dialog onClose={handleClose} open={addExpensesOpen} maxWidth=\"xl\">\r\n        <AddExpensesForm\r\n          classes={classes}\r\n          handleClose={handleClose}\r\n          setLoading={setLoading}\r\n        />\r\n      </Dialog>\r\n      <Dialog onClose={handleClose} open={addIncomeOpen} maxWidth=\"xl\">\r\n        <AddIncomeForm\r\n          classes={classes}\r\n          handleClose={handleClose}\r\n          setLoading={setLoading}\r\n        />\r\n      </Dialog>\r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial example\"\r\n        className={classes.speedDial}\r\n        // hidden={hidden}\r\n        icon={<SpeedDialIcon />}\r\n        onClose={handleSpeedDialClose}\r\n        onOpen={handleOpen}\r\n        open={speedDialOpen}\r\n        onMouseLeave={() => {}}\r\n      >\r\n        {actions.map((action) => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            tooltipOpen\r\n            onClick={action.action}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress disableShrink color=\"inherit\" />\r\n      </Backdrop>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport API from '../utils/API'\r\nimport { AuthContext } from '../App'\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexWrap: 'wrap',\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                [theme.breakpoints.down('xs')]: {\r\n                    width: '100%',\r\n                },\r\n            }\r\n        }\r\n    })\r\n);\r\n\r\nexport default function Login() {\r\n    const { Auth, setAuth, setAlertState } = React.useContext(AuthContext)\r\n\r\n    const [loginFormState, setLoginFormState] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const inputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        setLoginFormState({\r\n            ...loginFormState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const formSubmit = async (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        try {\r\n            await API.login(loginFormState).then(newToken => {\r\n                setAuth({ type: 'LOGIN', payload: { user: loginFormState.username, token: newToken.token } })\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n            setAlertState({\r\n                severity: \"error\",\r\n                message: \"Incorrect username or password\",\r\n                open: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n\r\n    if (Auth.loggedIn) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Login\" style={{ textAlign: 'center' }}>\r\n                <h4>Login</h4>\r\n                <form className={classes.root} onSubmit={formSubmit}>\r\n                    <TextField\r\n                        onChange={inputChange}\r\n                        value={loginFormState.username}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        label=\"username\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        onChange={inputChange}\r\n                        value={loginFormState.password}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"password\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" name=\"login\" type=\"submit\">Login</Button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nexport default function Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from './Alert'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { AlertStateType } from '../interfaces/Interfaces';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    snackbar: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSnackbar({ state, setState }: {\r\n    state: AlertStateType,\r\n    setState: React.Dispatch<React.SetStateAction<AlertStateType>>\r\n    }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setState({ ...state, open: false });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.snackbar}>\r\n            <Snackbar\r\n                open={state.open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n\r\n            >\r\n                <Alert onClose={handleClose} severity={state.severity}>\r\n                    {state.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState, useReducer } from 'react'\nimport { BrowserRouter as Router, Route, Redirect, RouteComponentProps } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Login from './pages/Login'\nimport API from './utils/API'\nimport { testDatabase } from './utils/db'\nimport './App.css';\nimport CustomizedSnackbar from './components/SnackBar'\nimport { AlertStateType, Auth, ContextState } from './interfaces/Interfaces'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { green, blueGrey, red } from '@material-ui/core/colors'\n\nimport { MuiPickersOverrides } from '@material-ui/pickers/typings/overrides';\nimport { CssBaseline, ThemeOptions } from '@material-ui/core'\n\n// Types to allow for theme customization\ntype overridesNameToClassKey = {\n  [P in keyof MuiPickersOverrides]: keyof MuiPickersOverrides[P];\n};\n\ntype CustomType = {\n  MuiPickersBasePicker: {\n    pickerView: {\n      maxWidth?: string;\n    };\n  };\n};\n\ndeclare module '@material-ui/core/styles/overrides' {\n  interface ComponentNameToClassKey extends overridesNameToClassKey { }\n  export interface ComponentNameToClassKey extends CustomType { }\n};\n\n// Instantiating default theme to use breakpoints\nconst defaultTheme = createMuiTheme();\n\n// Theme factory\nfunction createMyTheme(options: ThemeOptions) {\n  return createMuiTheme({\n    overrides: {\n      MuiPickersBasePicker: {\n        container: {\n          backgroundColor: blueGrey[900],\n          [defaultTheme.breakpoints.down(\"xs\")]: {\n          marginLeft: '-10px',\n          }\n        },\n      },\n      MuiCard: {\n        root: {\n          backgroundColor: blueGrey[900]\n        }\n      },\n      MuiDialogContent: {\n        root: {\n          backgroundColor: blueGrey[900]\n        }\n      },\n      MuiPickersCalendarHeader: {\n        iconButton: {\n          backgroundColor: blueGrey[900]\n        }\n      }\n    },\n    ...options\n  })\n};\n\nconst theme = createMyTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: blueGrey[900],\n    },\n    primary: {\n      main: green[900]\n    },\n    secondary: {\n      main: red[900]\n    }\n  },\n});\n\n\n\n// Check if user is logged in before returning protected component/page\nconst ProtectedRoute = ({ component: Component, loggedIn, ...rest }: {\n  path: string,\n  loggedIn: boolean,\n  setLoggedIn: Function,\n  component: React.FunctionComponent<RouteComponentProps>,\n}): JSX.Element => (\n    <Route {...rest} render={props => (\n      loggedIn\n        ? <Component {...props} />\n        : <Redirect to='/login' />\n    )\n    } />\n\n  )\n\nexport const AuthContext = React.createContext<ContextState>({\n  Auth: {\n    loggedIn: false,\n    user: \"\",\n    token: \"\"\n  },\n  setAuth: (): void => { },\n  setAlertState: (): void => { }\n})\n\n\n\nexport default function App() {\n\n  const reducer = (state: Auth, action: { type: string, payload?: { user: string, token: string } }): Auth => {\n    if (action.type === 'LOGIN' && action.payload) {\n      localStorage.setItem(\"user\", action.payload.user);\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        loggedIn: true,\n        user: action.payload.user,\n        token: action.payload.token\n      };\n    } else if (action.type === 'LOGOUT') {\n      localStorage.clear();\n      return {\n        ...state,\n        loggedIn: false,\n        user: \"\",\n        token: \"\",\n      };\n    } else {\n      return state;\n    }\n  };\n\n  const [Auth, setAuth] = useReducer(reducer, {\n    loggedIn: false,\n    user: \"\",\n    token: \"\"\n  })\n\n  const [alertState, setAlertState] = useState<AlertStateType>({\n    severity: undefined,\n    message: \"\",\n    open: false,\n  })\n\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    const user = localStorage.getItem(\"user\")\n    if (token) {\n      API.checkAuth(token)\n        .then(res => setAuth({ type: 'LOGIN', payload: { user: res.username, token: token } }))\n        .catch(err => {\n          if (err.message === \"Unauthorized\") {\n            setAuth({ type: 'LOGOUT' })\n          } else {\n            setAuth({ type: 'LOGIN', payload: { user: user || \"\", token: token || \"\" } })\n          }\n        })\n    }\n  }, [])\n\n\n  useEffect(() => {\n    testDatabase()\n  })\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AuthContext.Provider\n        value={{ Auth, setAuth, setAlertState }}\n      >\n\n        <Router>\n          <ProtectedRoute path=\"/\"\n            loggedIn={Auth.loggedIn}\n            setLoggedIn={setAuth}\n            // offline={offline}\n            component={Home}\n          />\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n        </Router>\n        <CustomizedSnackbar\n          state={alertState}\n          setState={setAlertState}\n        />\n      </AuthContext.Provider>\n    </ThemeProvider>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}